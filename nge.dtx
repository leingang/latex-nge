%^^A nge.dtx --- the source file for NGEd package
%^^A $Id$
%^^A
%^^A File nge.dtx is the single source file for the entire NGEd
%^^A package: all the LaTeX classes and styles, all the supporting
%^^A files, and all the documentation is generated from it.  The file
%^^A is structured so that each part in it generates some file or a
%^^A group of files related to each  other in the package, while
%^^A comments in that part provide the documentation.
%^^A
%^^A For general description of the package see section README below, for
%^^A installation instructions see section INSTALL, for license and
%^^A copyright notice see section LICENSE.  Alternatively, processing
%^^A this file through LaTeX, i.e. running the command 
%^^A     latex nge.dtx
%^^A will extract the content of these sections into files readme.txt,
%^^A install.txt and license.txt, respectively, which can be then
%^^A inspected separately.  This command will also generate other
%^^A files, for details please consult the documentation.
%^^A
%^^A
%^^A
% \iffalse SOURCES FOR NGE.INS AND LICENSE.TXT
%^^A
%^^A 
%^^A
%<*hide>
\begingroup
%</hide>
%^^A
%^^A NGE.INS
%^^A
%<*ins>
\input docstrip.tex
\keepsilent
%<*hide>
\askforoverwritefalse
%</hide>
\usedir{tex/latex/nge}
%^^A\showdirectory
\preamble

%^^A The line above is intentionally left blank for formatting purposes.
%</ins>
%^^A
%^^A LICENSE
%^^A
%<*license>
Copyright (C) 2003--2009 Matthew Leingang <leingang@courant.nyu.edu>
Copyright (C) 2009 Denis Kosygin <kosygin@courant.nyu.edu>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License, either version 1.3
of this license or (at your option) any later version.
The latest version of this license is in:

   http://www.latex-project.org/lppl.txt

and version 1.3 or later is part of all distributions of LaTeX 
version 2005/12/01 or later.

This work has LPPL mainenance status `maintained'.

The Current Maintainer of this work is M. Leingang.

%^^A Add to the line below the names of all generated files or give
%^^A reference to manifest.txt
This work consists of the file nge.dtx and the derived file nge.ins.
%</license>
%<*ins>
%^^A The line below is intentionally left blank for formatting purposes.

\endpreamble
%% Some parts of the source file nge.dtx are concealed from this
%% generation script with the help of <hide> anchor.  The correct
%% generation of all the files with the help of docstrip utility
%% relies on the assumption that option `hide' is never issued in
%% generating commands below.
\generate{%
  \file{ngemin.cls}{\from{nge.dtx}{ngemin}}
  \file{ngeexam.cls}{\from{nge.dtx}{ngeexam}}
  \file{ngeprob.sty}{\from{nge.dtx}{ngeprob}}
%^^A All generation commands for class and style files must go above
%^^A this line. 
%<*hide>
%^^A This part is concealed from docstrip.  Place here all the file
%^^A generating commands which should not be in nge.ins, in particular
%^^A generating commands for files which form the distribution package
%^^A `nge'.
  \nopostamble
  \file{nge.ins}{\from{nge.dtx}{ins,license}}
  \nopreamble\nopostamble
  \file{license.txt}{\from{nge.dtx}{license}}
  \file{readme.txt}{\from{nge.dtx}{readme}}
  \file{install.txt}{\from{nge.dtx}{install}}
%^^A  \file{makefile.out}{\from{nge.dtx}{makefile}}
%</hide>
}
\obeyspaces
\Msg{***************************************************************}
\Msg{*                                                             *}
\Msg{* To finish the installation you have to move all .cls and    *}
\Msg{* .sty files into a directory searched by TeX.                *}
\Msg{*                                                             *}
\Msg{* To produce the documentation run the file nge.dtx           *}
\Msg{* through LaTeX.  For details see file install.txt.           *}
\Msg{*                                                             *}
\Msg{* Happy TeXing                                                *}
\Msg{*                                                             *}
\Msg{***************************************************************}
%</ins>
%<ins>\endbatchfile
%<*hide>
\endgroup
%</hide>
% \fi
%^^A
%^^A Every line of TeX code below must be either commented out with %,
%^^A or enclosed in \iffalse ... \fi comments, or marked up with
%^^A docstrip anchors.  Each line of code not concealed from
%^^A `dosctrip' utility will be placed by it in every generated file.
%^^A
% \iffalse   SOURCES FOR *.TXT FILES
%^^A 
%^^A
%<*hide>
\iffalse
%</hide>
%^^A
%^^A README
%^^A
%<*readme>
%</readme>
%^^A
%^^A INSTALL
%^^A
%<*install>
%</install>
%^^A
%^^A
%^^A
%<*hide>
\fi
%</hide>
% \fi
%^^A
%^^A
%^^A
% \iffalse (This is a meta-comment)
%^^A
%^^A
%^^A
%^^A
%^^A
%^^A
% \fi
% \iffalse
%^^A
%^^A
%^^A
%<*driver>
\documentclass{ltxdoc}
\EnableCrossrefs
\CodelineIndex
\RecordChanges

\usepackage{fancyvrb}
%\newenvironment{framedcode}{\begin{Verbatim}[frame=single]}{\end{Verbatim}}

\usepackage{hyperref}
\usepackage{url}
\newcommand{\texcatalogueentry}[1]%
{\url{http://www.ctan.org/tex-archive/help/Catalogue/entries/#1.html}}
\newcommand{\ctanpackage}[1]%
  {\url{http://mirror.hmc.edu/ctan/macros/latex/contrib/#1}}
\newcommand{\ngedsvnroot}{\url{https://subversive.cims.nyu.edu/mathclinical/}}
\newcommand{\texlive}{\TeX{}~Live}
\newcommand{\latexpackage}[1]{\textsf{#1}}
\newcommand{\latexclass}{\latexpackage}
\newcommand{\latexfile}[1]{\textsf{#1}}
\newcommand{\docstrip}{\latexpackage{DocStrip}}
\newcommand{\ngefile}[1]{\latexfile{#1}}
\newcommand{\nged}{\latexpackage{NGEd}}
\newcommand{\ngedtx}{\ngefile{nge.dtx}}
\newcommand{\ngeins}{\ngefile{nge.ins}}

\usepackage[dvistyle]{todonotes}
\newcommand{\fixme}[1][]{\todo{FIX ME! #1}}



\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%^^A The actual code and documentation go below this line.
%
% \CheckSum{0}
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \title{\nged: A Next Generation Educational Bundle}^^A \\ version \fileversion}
% \author{Matthew Leingang\\leingang@courant.nyu.edu
%   \and Denis Kosygin\\kosygin@courant.nyu.edu}
% \maketitle
% \begin{abstract}
%   The \nged{} bundle is a set of \LaTeXe classes and packages,
%   providing a unified typographic support for the entire line of
%   educational materials: from tests and solutions to course
%   assessments.  Its naturally oriented toward mathematics courses
%   but it is not specific to them.
% \end{abstract}
%
% \tableofcontents
%
% \section{Introduction}
%
%
% \subsection{Goals}
%\todo{Rewrite!}
% The \nged{}bundle classes and packages should be
%
% \begin{itemize}
%   \item \emph{beautiful}
%   \item \emph{useful} 
%   \item \emph{flexible} items should be configurable
%   \item \emph{modular} This is why the several different packages for different uses
%   \item \emph{lazy} We will use other packages when they are useful
% \end{itemize}
%
% \subsection{Other classes which do this kind of thing}
%\todo{Expand!}
% Look at examdesign, mathexam, and exam.
% 
% \subsection*{Introduction}
%
% \subsubsection*{Conventions, adopted in is this manual}
% The word ``package'' is ambiguous and its meaning varies with the
% context.  In this manual it may mean any of the following:
% \begin{description}
% \item[\LaTeX{} package:] a collection of \LaTeX{} styles and classes,
%   designed to work well together and which may depend on each other.
%   Files, comprising a \LaTeX{} package are usually located in a
%   common directory of a \LaTeX{} distribution tree.  In particular,
%   all files of \LaTeX{} package \nged, described in this
%   manual share are located in directory \ngefile{nge}.
% \item[Distribution package:] a \LaTeX{} package together with its
%   documentation and other supporting files (e.g. a list of files
%   with their md5 checksums).  Distribution packages are frequently
%   taylored to one of popular \TeX{} distributions, such as teTeX or
%   liveTeX and most of them are available for download in archived
%   forms at large Internet repositories, such as CTAN.\fixme{CTAN address here}
% ^^A When this package is released and accepted to CTAN, uncommment
% ^^A the following lines and insert the appropriate address.
% \iffalse (this is meta-comment)
%  In particular, the current version of \nged, documented in
%  this manual, is available for download on CTAN
%  and various CTAN mirrors (see \ctanpackage{}).
%   This distribution package does not actually contain any \LaTeX{} class or
%   style files, they are generated automatically during package installation.
% \fi
% \item[Source package:] a collection of files and tools necessary for
%   the production and further development of the corresponding
%   \LaTeX{} package together with its supporting materials.  Source
%   package may also include various configuration files for tools,
%   package maintainers and developers use during the development process.
% \end{description}
% Most of the time this ambiguity does not lead to confusion, since
% the intented meaning of word ``package'' is clear from the context.
% In section \ref{sec:user} ``package'' usually means the \LaTeX{}
% \nged{} package and in section \ref{sec:admin} ``package''
% usually means the distribution package \ngefile{nge}.
%
% \subsection{History and changes}
%
% M.\ Leingang first wrote the exam class in 2003 and has developed it
% in stages since then.  Other pieces have been developed along the
% way, too.  In 2009 D.\ Kosygin refactored the package and its
% documentation.  Version 3.0 has been released to public and uploaded
% on CTAN on\fixme{date here}
%^^A insert date here!
%
%
% \section{Using \nged}
% \label{sec:user}
% 
% 
% \subsection{Class \ngefile{ngemin.cls}}
% \label{sec:user-ngemin}
%
% This class defines the common theme for all the documents produced
% with the help of \nged.  All other classes in this package
% load it and add their own changes to document appearence.
%
% \section{Administration of \nged}
% \label{sec:admin}
%
% This section discusses \nged{} distribution package as
% described in the introduction of this manual.  The structure of this
% package follows popular conventions, adopted in most of \LaTeX{}
% packages of \texlive{} distribution.  \LaTeX{} code for the entire
% package together with examples and supporting documentation is
% contained in a single file \ngedtx{}.
%
% \subsection{Installation}
% \label{sec:admin-installation}
%
% \subsection{Configuration}
% \label{sec:admin-configuration}
% \StopEventually{\PrintChanges\PrintIndex}
%
% \section{\LaTeX{} code}
% \label{sec:code}
%
%^^A Reminder: every line of TeX code in this section must be either
%^^A commented out with % or marked up with docstrip anchors.  Each
%^^A line of code not concealed from dosctrip utility will be placed
%^^A by it in every generated file.
%
% All the classes and styles in this package rely on \LaTeXe.  No
% support for earlier versions of \LaTeX{} is provided.
%    \begin{macrocode}
<ngemin|ngeexam|ngeprob>\NeedsTeXFormat{LaTeX2e}
<ngemin>\ProvidesClass{ngemin}
<ngeexam>\ProvidesClass{ngeexam}
<ngeprob>\ProvidesPackage{ngeprob}
%    \end{macrocode}
%
% \subsection{File \ngefile{ngemin.cls}}
% \label{sec:code-ngemin}
%
%^^A <*ngemin>
% This class defines the common theme for all the documents produced
% with the help of \nged.  All other classes in this package
% load it and add their own changes to document appearence.
% It is derived from \LaTeX{} class \latexfile{article.cls}
%    \begin{macrocode}
\LoadClass{article}
%    \end{macrocode}
% to which we pass all the unknown options\todo{can we load class
% before passing all options to it?}
%    \begin{macrocode}
\DeclareOption*{\PassOptionToClass{\CurrentOption}{article}}
\ProcessOptions\relax
%    \end{macrocode}
% 
%^^A </ngemin>
%
% \subsection{File \ngefile{ngexam.cls}}
% \label{sec:code-ngeexam}
%
%^^A <*ngeexam>
%    \begin{macrocode}
\LoadClass{ngemin}
%    \end{macrocode}
%^^A </ngeexam>
%
% \subsection{File \ngefile{ngeprob.sty}}
% \label{sec:code-ngeprob}
%
%^^A <*ngeprob>
%
%^^A </ngeprob>
%
% \section{Source}
% \label{sec:source}
% 
% This section discusses the collection of files and tools used in
% generation and development of \nged{} bundle, that is, in
% terms of conventions in the beginning of this manual, the
% \emph{source package} \nged.  We shall refer to files in
% \nged{} source package as \nged{} \emph{sources} or
% simply \emph{the sources}.
%
% \subsection{Main source file: \ngedtx{}}
% \label{sec:source-dtx}
%
% 
% File \ngedtx{} is the single source file for the entire
% \nged{} package: all the \LaTeX{} classes and styles, all the
% supporting files, and all of the documentation is generated from it.
% The consists mostly of \LaTeX{} code together with copious comments
% which provide the source for the documentation.  The file is
% structured so that each part in it generates some file or a group of
% files related to each other in the package.
%
%
%
% \subsection{Generation of \LaTeX{} files and other files:
%   \ngefile{nge.ins}}
% \label{sec:source-ins}
%
% In order to avoid duplication of effort, most of the package files
% are generated from \ngedtx{} by running various programs on
% it. In particular, running \TeX{} on \ngedtx{} generates
% \ngefile{nge.sty} and all the class and style files.  Similarly,
% running \TeX{} on \ngefile{nge.ins} generates all the class and
% style files, but not \ngefile{nge.ins} itself, in order to avoid
% vicious loops.  Setting the appropriate file structure takes some
% effort, but once it is in place, adding to it is not very difficult.
%
%
% \subsection{Documentation}
% \label{sec:source-documentation}
%
% \LaTeX{} code for each class and style file must be placed in a
% separate subsection of section \ref{sec:code} together with detailed
% explanations of its structure.  The title of this section is just
% the name of this class or style file.  In addition there must be a
% subsection of section \ref{sec:user} with the same title, discussing
% with examples how to use it.
%
%
% \IfFileExists{Makefile}
% {\subsection{\ngefile{Makefile}}\label{sec:source-makefile}
% \VerbatimInput{Makefile}}
% {\relax}
%
% \section{Development notes and history}
% \label{sec:dev}
%
%^^A All the code in this section is hidden from docstrip
%^^A <*hide>
%
% This section documents the entire design of \nged{} package and the
% history of its development.  Understanding the structure of an
% unfamiliar software package frequently is not an easy task.  After
% several cycles of development such a package may consist of several,
% sometimes many sophisticated parts interacting is subtle and
% complex.  I\footnote[1]{\label{footnote:1}DK} find it helpful to document the entire
% process of development from the scratch, stage by stage, introducing
% components of the design and implementation one by one.  This way it
% is easier to comprehend (or recall after prolonged interruption) the
% underlying structure of the package and the logic of its evolution.
% So this section is written for my own benefit in the first place and
% bearing in mind a possibility that someone else may find it useful
% too.
%
% \subsection{The purpose of \nged}
% \label{sec:dev-overview}
%
% I\footnotemark[1]\fixme view \nged{} as a tool of teacher's personal toolkit in an
% environment where teaching happens on an industrial scale: a large
% school, a college with large classes, etc\dots.  This tool provides
% typographic support for the entire lifetime of a course taught, from
% its development stage through periodic assesments to a complete bank
% of materials: assignments, tests, handouts for students, notes for
% teachers and internal documentation.  In an ideal teaching
% environment \nged{} will be complemented by a database with a bank
% of questions, problems, tasks, and other materials, crossreferenced
% by subjects, topics, keywords, difficulty level and so on, and
% teaching support system, which automates as much as possible daily
% routine tasks such as distribution and administration of tests,
% grade processing and anything else which which may be reliably
% delegated to machines and computers.
%
% \nged{} should make it possible to concentrate on development of
% course structure, preparation of its materials without worrying too
% much about uniformity and consistency of the appearence of all the
% documents.  For example, preparation of exams, their solutions for
% students, rubric notes for graders, postmortem discussions for
% instructors and assessments for course designers could be possible
% with selection of a few virtual switches applied to the contents of
% the course, which integrates the printed output with other course
% materials under the same typographic theme.
%
% On the other hand \nged{} must be flexible enough to allow
% customization of such themes sa desired.  In addition the package
% should provide a set of sensible defaults which work well out of the
% box and supply an easily extensible theme, which may serve as a
% basis for derivation of other themes, taylored to particular needs
% of course designer.
%
% \subsection{Design decisions}
% \label{sec:dev-design}
%
% \nged{} grew naturally out of design of tests and course materials
% in mathematical courses, and there is a widely followed tradition of
% using \LaTeX{} and other \TeX{}-derived programs for typesetting
% mathematics.  It is then a straightforward decision to develop
% \nged{} as a \LaTeX{} package at the same time keeping an eye for a
% possibility of extending it later to other \TeX-breeds, such as
% ConTeXt.  
%
% Package \nged{} will be developed following standards and
% conventions of \texlive{}
% distribution\footnote{\url{http://www.tug.org/texlive/}} with the
% ultimate goal of making it available for public download on the
% Comprehensive TeX Archive Network\footnote{CTAN,
%   \url{http://www.ctan.org}}.  \nged{} should integrate well with
% \texlive{} distribution.  In particular \nged{} in its default
% configuration must not rely on any package outside for this
% distribution neither in application of its classes and style files,
% nor in generation of package documentation.
% 
% The released version of \emph{\nged{} distribution package},
% intended for upload on CTAN, should consist of two main files:
% \ngedtx{} and \ngefile{nge.ins}, supplemented with user
% documentation in PDF and other supporting files.  File
% \ngedtx{} will contain the \LaTeX{} code of all class and
% style files in the package and file \ngefile{nge.ins} will be the
% installation script, which extracts all the \LaTeX{} files from
% \ngedtx{} and installs them in the appropriate places of
% \texlive{} distribution.  File \ngedtx{} must also provide
% sources for \nged{} user manual and possibly other documents related
% to the package.
% 
% \nged{} development will follow the principle of creative lazyness:
% no reinvention of wheels, if some task is done well by another
% \texlive{} package, this task should be delegated to it.
% Duplication of text will also be avoided as much as possible: the
% best way to keep two blocks of text or code identical is to insert
% the same source twice.  Finally, the best way to work rapidly is to
% think slowly and provide plenty of explanations.  The package will
% have documented as much as possible, even its own documentation.
%
% Thus \nged{} will be implemented as follows.  All the \LaTeX{}
% sources together with their documentation and sources of all the
% supporting files for distribution package will be contained in the
% single source file \ngedtx{}.  File \ngedtx{} will
% be structured so that all the parts of the distribution package for
% upload on CTAN, including the installation script \ngefile{nge.ins}
% will be extracted from \ngedtx{} with the help of
% \docstrip{} utility.  File \ngedtx{} will also document its
% own structure.  Thus \ngedtx{} is the only source file of
% \nged{} distribution package.
% 
% The generation and development of \nged{} package will be aided by a
% make file \ngefile{Makefile}, which will be evolved in parallel with
% \nged{}.  This makefile will not be a part of \nged{} distribution
% package, but it will be a part of \nged{} source package.  Its
% development will be also documented in appropriate detail in
% \ngedtx{}.  Thus \ngedtx{} and \ngefile{Makefile}
% are the only two files of \emph{\nged{} source package}.  These two
% files together with \LaTeX{} packages, required for application of
% all \nged{} class and style files and generation of all \nged{}
% documentation form \emph{\nged{} development package}.
% 
% \nged{} development package will be placed under version control in
% a Subversion repository at \ngedsvnroot.
%
% Other design decisions pertinent to particular features of \nged{}
% will be made below as such a necessity arises.
%
% \subsection{Main source file: \ngedtx{}}
% \label{sec:dev-dtx}
%
% We begin with empty file \ngedtx{} and introduce its structure step
% by step adding more and more details.  
%
% Let us summarize the requirements for this file formulated in
% section \ref{sec:dev-design}.  File \ngedtx{} contains \LaTeX{} code
% for all \nged{} class and style files together with their
% documentation.  It also contains sources of all the supporting files
% of \nged{} distribution package and their documentation.  And
% finally, it contains its own documentation too, part of which is
% provided by this section.  We shall adopt the following structure of
% \ngedtx.  The file will consist of two parts: head and body
% \begin{Verbatim}[frame=single,commandchars=\\\{\}]
\meta{head}
\meta{body}
% \end{Verbatim}
% Part \meta{head} contains the sources of all the supporting files,
% while part \meta{body} contains all the \LaTeX{} sources for class
% and style files, their documentation and the package documentation
% too.
%
% In order to combine \LaTeX{} code and its documentation in one file
% we shall use \LaTeX{} package
% \latexpackage{doc}\footnote{\texcatalogueentry{doc}}.  The \LaTeX{}
% code for \nged{} class and style files in file \ngedtx{} is marked
% up according to \latexpackage{doc} conventions and is interpspersed
% with comments, which serve as \LaTeX{} source for documentation.
% Actual \nged{} class and style files are extracted from \ngedtx{} by
% \docstrip{}\footnote{\texcatalogueentry{docstrip}} utility and the
% package documentation produced by processing \ngedtx{} with
% \LaTeX{}.  Thus \ngedtx{} has the form
% \begin{Verbatim}[frame=single,commandchars=\\\{\}]
\textit{sources for supporting files in \nged{} distribution package}
\textit{\latexpackage{doc} configuration}
\textit{latex code for classes and styles code with \docstrip{} markup}
  \textit{and their documentation}
\textit{\nged{} documentation source}
% \end{Verbatim}
% The detailed structure of each part is discussed in subsections
% below.
%
% \subsubsection{The driver}
% \label{sec:dev-dtx-driver}
%
% By convention, the part of file \ngedtx{}, containing
% \latexpackage{doc} configuration is called the \emph{driver}.
% We shall use in the driver  \LaTeX{} class \latexclass{ltxdoc}, which loads
% \latexpackage{doc} automatically.  Thus initially the driver looks
% as follows.
% \begin{Verbatim}[frame=single]
\documentclass{ltxdoc}

\begin{document}

\end{document}
% \end{Verbatim}
% The lines between |\begin{document}| and |\end{document}| contain
% commands for \latexpackage{doc} to read and process files with the
% code and documentation.  In our case there is only one file ---
% \ngedtx{} itself and we use command
% \begin{Verbatim}
\DocInput{nge.dtx}
% \end{Verbatim}
% But running |latex| on file
% \begin{Verbatim}[frame=single,numbers=left]
\documentclass{ltxdoc}

\begin{document}
\DocInput{nge.dtx}
\end{document}
% \end{Verbatim}
% will produce an error, since after reading line 4 \LaTeX{} will
% begin reading \ngedtx{} from the beginning and during the second
% processing of this file \LaTeX{} again sees
% |\documentclass{ltxdoc}|.  In order to avoid this error everything
% between |\documentclass{ltxdoc}| and |\end{document}| in \ngedtx
% needs to be concealed from \LaTeX{} on the second reading.  This is
% done by encasing the driver in a conditional statement whose
% condition is never fulfilled, that is between \TeX{} commands
% |\iffalse| and |\fi|.
%
% However running |latex| on file
% \begin{Verbatim}[frame=single]
\iffalse
\documentclass{ltxdoc}

\begin{document}
\DocInput{nge.dtx}
\end{document}
\fi
% \end{Verbatim}
% leads another problem: now driver part is concealed from
% \LaTeX{} on the first run too.
%
% In order to make this part visible to \LaTeX{} on the first run
% and invisible on the second run we can use the fact, that
% package \latexpackage{doc} changes the meaning of character \%.
% With \latexpackage{doc} loaded \% no longer indicates the beginning
% of a comment, it is ignored by \LaTeX{} in the same way a blank
% space is ignored.  Thus the driver
% \begin{Verbatim}[frame=single]
% \iffalse
\documentclass{ltxdoc}

\begin{document}
\DocInput{nge.dtx}
\end{document}
% \fi
% \end{Verbatim}
% is processed by \LaTeX{} correctly and produces no errors: it is
% seen by \LaTeX{} on the initial run and everything between
% |%\iffalse| and |%\fi| is skipped on the second
% run.
%
% Thus, the driver in \ngedtx has the following structure
% \begin{Verbatim}[frame=single,commandchars=\+\[\],numbers=left]
% \iffalse
% <*driver>+label[drv:line1]
\documentclass{ltxdoc}
+textit[+latexpackage[doc] configuration]
+textit[and configuration for other packages]
\begin{document}
\DocInput{nge.dtx}
\end{document}
% </driver>+label[drv:line2]
% \fi
% \end{Verbatim}
% Additional tags |<*driver>| and |</driver}>| in lines
% \ref{drv:line1} and \ref{drv:line2} mark up for \docstrip{} utility
% the boundaries of the driver.
%
%
% \subsubsection{\docstrip{} markup}
% \label{sec:dev-dtx-docstrip-markup}
%
% 
%
%
%
% Template above still produces no output, since it does not contain
% anything, apart from commands, telling \LaTeX{} to load package
% \latexpackage{doc} and reread file \ngedtx{}.  Now we may add some
% text and \LaTeX{} commands above and below this template in order to
% generate documentation.  Anything following an unquoted
% |%| till the end of the
% line will be skipped by \LaTeX{} on the first run and seen on the
% second, except for parts enclosed between
% |%\iffalse| and |%\fi| or commented
% out with the help of |^^||A| (for details see the documentation for
% package \latexpackage{doc}).
%
% We shall adopt the following conventions.  The template above,
% enclosed between |%\iffalse| and |%\fi| will be called \emph{the
% driver} part of \ngedtx.  Later we shall add other commands to the
% driver, loading \LaTeX{} packages as needed and definitions of
% macros used in typesetting the main text.  The entire \LaTeX{} code
% together with explanations, marked up according to rules, specified
% by \latexpackage{doc} package, will be placed \emph{below} the
% driver.  The documentation of \ngedtx, including the text of this
% section, will be also placed below the driver.  Thus the actual
% source of \ngedtx{} has the following form:
% \begin{Verbatim}[frame=single,commandchars=\+\[\]]
+dots 
[+normalfont parts to be described later]
+dots
% \iffalse
\documentclass{ltxdoc}
+dots 
[+normalfont commands, loading packages]
+dots
[+normalfont macros definitions]
+dots
\begin{document}
\DocInput{nge.dtx}
\end{document}
^^A The actual code and documentation go below this line
+dots
% \subsection{Main source file: \ngedtx{}}
% \label{sec:dev-dtx}
%
% We begin with empty file \ngedtx{} and introduce its
% structure step by step adding more and more details.
+dots
% \end{Verbatim}
% The structure of \ngedtx{} below the driver will be discussed later.
%
% \subsubsection{Generating \ngeins{} and supporting files}
% \label{sec:dev-dtx-ins}
%
% Now let us discuss the structure of \ngedtx{} \emph{above} the
% driver file.  This is the part where we shall place all the sources
% of other files in \nged{} distribution package, in particular
% \ngeins and other supporting files.  This part of \ngedtx{} begins
% with loading \docstrip{} utility
% \begin{Verbatim}
\input docstrip.tex
% \end{Verbatim}
% followed by commands to extract some parts of \ngedtx, marked up
% according to \docstrip{} specifications.  Thus the beginning of
% \ngedtx{} looks like
% \begin{Verbatim}[frame=single,commandchars=\+\[\]]
\input docstrip.tex

+dots +normalfont[docstrip configuration commands] +dots

\generate{%

+dots +normalfont[file generation commands] +dots

}
% \end{Verbatim}
% Every part of \ngedtx{} above the driver part serves as a source of
% some file in \nged{} distribution package.  For example, one part
% contains installation instructions for \nged{} package.  It has the
% form\fixme[install.txt must be empty so far]
% \VerbatimInput{install.txt} 
% 
%
%
%
%^^A </hide>
%^^A Reminder: all the code in the section above is hidden from docstrip
%
% \section*{Misc unprocessed}
% The rest of this section contains various bits and ends: ideas and things to
% try, notes to self and other developers, lists of bugs, etc.
%
% \subsection{Bugs}
% \label{sec:dev-bugs}
%
% \subsection{Bits and ends}
% \label{sec:dev-misc}
% To be processed.
% \begin{list}{}{Things to do and to think about}
% \item Configure todos in this file
% \item Use svn support too for tags and in latex
% \item Think through font selection for package names, file names and
%    commands issued.
%  \item Find a way to incorporate ChangeLog file.
%  \item Add style for url references.
%  \item Write about mirroring manual parts for user and developer.
%  \item Add paragraph about making releases.
%  \item When nge.dtx is processed through latex, issue installation
%  instructions in the end, not at the beginning.
% \item Debug index generation
% \item Add possibility to make todo and fixme notes right in the text
% \item Mention in the manual packages which \nged{}uses and what
% is needed to compile documentation.
% \item update message and sync it with installation instructions.
% \item sync file list with license with what is generated by the package
% \item make a list in the document of all the files, generated by it.
% \item test nge.ins with local docstrip.cfg.
%  \item Think through typographic conventions: urls, package names,
%  directories, files, what else?
%  \item Combining several documents (exams, quizzes, etc\dots) in one
%  document. Use report class?  \textsf{Doc} package and docstrip?
% \item ``postmortem'' command and environment.
% \item Is there a simple way to keep an up to date manifest.txt?
% \item Is it possible to stop processing nge.dtx, if it is not
% processed with LateX, without generating any errors?
% \item the package should not depend on files outside \texlive{}
%   distribution.
% \item fix \verb|\showdirectory| call in \meta{ins} section.
%  \item Two possibilities --- all problems back to back, or each
%    problem on a new page.  in the latter case an option to provide a
%    space for the answer and option to provide place for a problem
%    grade.
%  \item Compile list of problems with totals points in a table.
%    options for placing this table on the front page, standalone
%    table on the second page or on the last page.
%  \item multiple variants.  options for solutions, rubrics.  Notes to
%    students and to graders. Assesment notes.
%  \item compilation of all course materials under the same title,
%    similar to doc package.
%  \item configuration file, where a common theme may be configured.
%  \item Rudimentary control over vertical space for problems.
%  \item Localization.
%  \item Types of problems: multiple choice (circle, underline answer,
%    fill in the blanks), true or false, problems with parts (one
%    level).
%  \item examdesign produces multiple (randomized?) versions
%  \item Simultaneous generation of exams (with versions), solutions
%    and rubrics in one batch, but in separate files.
%  \item most options (where it makes sense) should provide a
%    possibility of manually overriding them, at least in principle.
%  \item Multiple instructors, multiple sections -- think what to do
%    in that case.
%  \item Write about typographic conventions for the exam (e.g.
%    display style formulas vs. inline style formulas).
%  \item in nyu classes may be it is possible to generate pages for
%    scantrone?
%  \item  partial grading tables?  Not sure whether it is a good idea
%  \item  use hyperref in PDF mode
%  \item provide for bonus problems and points
%  \item  write a manual with plenty of examples
%  \item I think automatic generation of dtx file for release is
%    unavoidable.  But still I would like to break it apart as little
%    as possible.  May be it is possible to keep everything in it and
%    process it conditionally depending on whether it is a release
%    version or a developlment version.  For now I am not going to
%    worry about that.
%  \item Write a simple script which guards agains common typos
%    (forgotten braces after macros like \verb|\LaTeX|, repeated
%    words, etc.  Perhaps it should be written in perl.
%  \item In addition to system-wide configuration there must be a
%    possibility to configure \nged{} in a single directory, so
%    that it processes all the sources using the common theme, but
%    which may be overriden in individual documents.
%  \item Review nged.dtx.  Separate cleanly style and logic.  Must
%    have default behaviour similar to article.cls
%  \item Sensible sets of defaults?
%  \item Distinguish release package, release tools, release sources,
%    development sources, development tools and personal development
%    environment and structure Makefile accordingly.
%  \item Write a short manual for developing too
%  \item perhaps it is better to use group environment for sections
%    included conditionally.
%  \item Try a docstrip.cfg, so that it is as silent as possible
%  during development
% \item look at svn support in latex and emacs
% \item Add discussion about file structure
% \item write introduction about nged in broad view
% \item produce reportsand assessments in doc style?
% \item Is is possible to make releases with docstrip?
% \item 2 rolling released branches --- stable and dev. also my
%   private development branch kdv.
% \item title pages are just special pages
% \item course name macro, what shall it include?
% \item course info: title, catalog number, timestamp (i.e. academic
%   year, semester, etc, think of a better term in here).
% \item If something is omitted, such as course title, author, etc, it
%   should not be printed, and must not produce error.  The only
%   exception is the title and \verb|maketitle| command.
% \item pdf output may provide something which is not available in dvi
%   format.
% \item when releasing package update checksum
% \item Do we need a bibliography with CTAN URLs for packages?
%  \end{list}
%
% Here is the list of todo notes located throughout the text.
% \listoftodos 
%
% \IfFileExists{ChangeLog}
% {\subsection{ChangeLog entries}\label{sec:dev-changelog}
% \VerbatimInput{ChangeLog}}
% {\relax}
%
% \Finale
%
%^^A Local Variables:
%^^A TeX-master: t
%^^A TeX-parse-self: t
%^^A TeX-auto-save: t
%^^A LaTeX-command: "TEXINPUTS=\".:texmf//:\" latex"
%^^A End
