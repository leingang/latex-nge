% \iffalse
%<*ins>
\def\plainTeXname{plain}
\ifx\fmtname\plainTeXname
\input docstrip.tex
\keepsilent\askforoverwritefalse
\nopreamble\nopostamble
\generate{\file{ngetest.cls}{\from{\jobname.dtx}{ngetest}}
  \file{nge.drv}{\from{\jobname.dtx}{driver}}
  \file{test.tex}{\from{\jobname.dtx}{test}}
  \file{test-ans.tex}{\from{\jobname.dtx}{test}}
  \file{test-key.tex}{\from{\jobname.dtx}{test}}
}
\expandafter\endbatchfile
\fi
%</ins>
%<*hide>
\documentclass[draft]{ltxdoc}
%</hide>
%<*driver>
%<driver>\documentclass[final]{ltxdoc}
%\usepackage{ifthen}
\usepackage{ifdraft}
\usepackage[obeyDraft,dvistyle]{todonotes}
\usepackage{showkeys}
%\ifdraft{%
  \usepackage{svninfo}
%}{}
\providecommand{\fileversion}{}
\providecommand{\filename}{}

\usepackage{amsmath}
\EnableCrossrefs
\CodelineIndex
\RecordChanges

\newcommand{\package}[1]{\textsf{#1}}
\newcommand{\latexfile}[1]{\textsf{#1}}
\newcommand{\latexclass}[1]{\latexfile{#1}}
\newcommand{\latexpackage}[1]{\latexfile{#1}}
\newcommand{\option}[1]{\textsl{#1}}
\newcommand{\optionvalue}[1]{\texttt{#1}}
\newcommand{\mode}[1]{\textsl{#1}}
\newcommand{\nged}{\package{NGEd}}
\begin{document}
  \MakeShortVerb{\|}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%^^A \ifdraft{%
%   \svnInfo $Id$ %^^A
%   \renewcommand{\fileversion}{development version, revision \svnInfoRevision}
%   \ProvidesFile{\svnInfoFile}[^^A
%   \svnInfoYear/\svnInfoMonth/\svnInfoDate\space\fileversion: NGEd source file.]^^A
%^^A }{}
% \DoNotIndex{\NeedsTeXFormat,\ProvidesClass,\ProvidesPackage,\ProvidesFile}
% \DoNotIndex{\RequirePackage,\LoadClass,\InputIfFileExists}
% \DoNotIndex{\DeclareOption,\CurrentOption,\ExecuteOptions,\ProcessOptions}
% \DoNotIndex{\PassOptionsToPackage,\PassOptionsToClass}
% \DoNotIndex{\ClassWarning,\PackageWarning,\ClassError,\PackageError}
% \DoNotIndex{\AtEndOfClass,\AtEndOfPackage,\AtBeginDocument,\AtEndDocument}
% \DoNotIndex{\newcommand,\newenvironment,\renewcommand,\renewenvironment}
% \DoNotIndex{\begin,\begingroup,\end,\endgroup,\csname,\endcsname}
% \DoNotIndex{\normalfont,\itshape,\slshape,\bfseries,\sffamily}
% \DoNotIndex{\textbf,\textit}
% \DoNotIndex{\item,\par}
% \DoNotIndex{\@onelevel@sanitize,\@nil,\@nnil}
% \DoNotIndex{\pgfkeys,\pgfqkeys,\pgfkeysalso,\pgfqkeysalso}
% \DoNotIndex{\pgfkeyslet,\pgfkeysvalueof,\pgfkeysifdefined}
% \DoNotIndex{\pgfkeyscurrentname,\ProcessPgfOptions}
% \DoNotIndex{\excludeversion,\includeversion}
% \DoNotIndex{\ifthenelse,\equal,\newboolean,\boolean,\setboolean,\or}
% \DoNotIndex{\newcounter,\setcounter,\stepcounter,\refstepcounter}
% \DoNotIndex{\addtocounter,\value,\arabic}
% \DoNotIndex{\def,\edef,\let,\if,\ifx,\else,\fi}
% \DoNotIndex{\expandafter,\noexpand,\relax}
% \DoNotIndex{\meaning,\string,\jobname,\space,\typeout}
% \DoNotIndex{}
%
% \title{\nged: A Next Generation Educational Bundle\\ \fileversion}
% \author{Matthew Leingang\\leingang@courant.nyu.edu
%   \and Denis Kosygin\\kosygin@courant.nyu.edu}
% ^^A \ifdraft{^^A
%   \renewcommand{\date}{\svnToday}^^A
%^^A}{}
% \maketitle
% \tableofcontents
% \listoftodos
%
% \section{User manual}
% \label{sec:user-ngetest}
%
% \subsection{Options}
% \label{sec:user-ngetest-options}
%
% Class \latexclass{ngetest} is derived from the standard \LaTeX\
% class \latexclass{article}.  It accepts all the options of
% \latexclass{article} class:
% \option{a4paper},
% \option{a5paper},
% \option{b5paper},
% \option{letterpaper},
% \option{legalpaper},
% \option{executivepaper},
% \option{landscape},
% \option{10pt},
% \option{11pt},
% \option{12pt},
% \option{oneside},
% \option{twoside},
% \option{draft},
% \option{final},
% \option{titlepage},
% \option{notitlepage},
% \option{onecolumn},
% \option{twocolumn},
% \option{leqno},
% \option{fleqn}, and
% \option{openbib}.
% Most of these options have the same meaning in class
% \latexclass{ngetest} as in \latexclass{article}.  All the
% differences are explicitely specified below.
% 
% Class \latexclass{ngetest} uses package \latexpackage{versions} and
% accepts options \option{nogroup} and \option{tracing}, which have
% the same meaning in class \latexclass{ngetest} as in package
% \latexpackage{versions}.
%
% In addition class \latexclass{ngetest} has its own options which are
% described in the rest of this section.  As opposed to options for
% standard \LaTeX{} classes most of \latexclass{ngetest} own options
% may accept values.  Value \meta{value} may be given to
% \latexclass{ngetest} option \meta{option} by specification
% \meta{option}|=|\meta{value} in the options argument to
% \latexclass{ngetest}.  For example, the line
% \begin{verbatim}
% \documentclass[12pt,mode=answers]{ngetest}
% \end{verbatim}
% specifies two options for \latexclass{ngetest}: option \option{12pt}
% and \option{mode}.  Option \option{12pt} is the standard option for
% \LaTeX\ class \latexclass{article} and it has the same effect in
% \latexclass{ngetest}, it sets the font size to 12 points.  Option
% \option{mode} is \latexclass{ngetest}'s own mode and the assignment
% |mode=answers| above sets the document mode to |answers|.  Note that
% no spaces are allowed in assignmens \meta{option}|=|\meta{value}.
% If option \meta{option} accepts no value, it is specified in the
% class' option list as \meta{option}.
%  
%
% Here is the complete list of \latexclass{ngetest}'s own options
% with the description of accepted values.
% \begin{description}
% \item[\option{mode}] determines which parts of the document are
%   typeset. Accepts values \optionvalue{test}, \optionvalue{answers}
%   and \optionvalue{key}.  If the mode is not specified
%   \latexclass{ngetest} tries to guess the mode by inspecting the
%   filename.  All the guessing is turned off if \option{mode} is
%   assigned explicitely in |\documentclass| line.  For details see
%   section \ref{sec:user-ngetest-modes}.
% \item[\option{modesep}] specifies how the file name of latex job is
%   split in parts, which are inspected to determine the mode.
%   Accepts a nonempty string of characters which typically is a
%   one-character string.  Default is \optionvalue{-}.  Since it may
%   be difficult or impossible to set \option{modesep} explicitely to
%   some characters in |\documentclass| line, keywords are reserved
%   for underscore, comma and space characters as \option{modesep}
%   values.  For details see section \ref{sec:user-ngetest-modes}.
% \end{description}
%
% \subsection{Modes}
% \label{sec:user-ngetest-modes}
%\todo{Rewrite!}
% Class \latexclass{ngetest} is the generic class for producing tests:
% exams, quizzes, questionnaires, and so on\ldots.  From each source
% file one can produce three types of documents: the test itself, the
% test with solutions to problems and answers to questions, and
% marking guide for the test with the answer key and marking rubrics.
% Accordingly we distinguish three modes for the document processing:
% \emph{test} mode, \emph{answers} mode, and \emph{marking key}
% mode. Test and answers modes are mutually exclusive, the marking
% guide mode is an extension to the answers mode.
%
% By default if class \latexclass{ngetest} is used without options, the
% document is processed in test mode.  Option \option{answers}
% switches to answers mode and option \option{markingguide} typesets
% all solutions and answers together with marking rubrics.
%
% Mode may be specified explicitely as an option to
% \latexclass{ngetest}.  Possible values are |test| (this is the
% default), |answers| and |key|.
%
%
% \paragraph{How \latexpackage{ngetest} determines the document mode.}
% Here is the complete description of the algorithm, determining the
% mode.
% \begin{enumerate}\renewcommand{\theenumi}{\textit{Step} \arabic{enumi}}
% \item If |\documentclass| line has option settings of the form
%   |mode=|\meta{value}${}_1$, |mode=|\meta{value}${}_2$, \dots,
%   |mode=|\meta{value}${}_n$, \latexpackage{ngetest} examines them
%   one by one: if \meta{value}${}_i$ in setting
%   |mode=|\meta{value}${}_i$ is recognized by \latexpackage{ngetest}
%   as a valid mode setting, the mode is set to \meta{value}${}_i$,
%   otherwise this setting is ignored and the ``unrecognized mode''
%   warning is issued.  After all the settings are processed the
%   document mode is either set to the last recognized value or is
%   still undefined.  The latter also the case, in particular, when
%   there were no settings |mode=|\meta{value} among class options.
% \item If after step 1 the mode is still not defined,
%   \latexpackage{ngetest} tries to guess an appropriate mode from the
%   name of the latex file.  If the file name is \meta{name}|.tex|, then
%   after the extension |.tex| is thrown out, \latexpackage{ngetest}
%   represents \meta{name} as a sequence of fragments separated by
%   character |-|
%   \begin{equation*}
%     \text{\meta{name}}
%     =\text{\meta{frag}}_1|-|\text{\meta{frag}}_2|-|
%     \dots|-|\text{\meta{frag}}_l
%   \end{equation*}
%   and such that the separating character |-| does not occur in any
%   of the fragments.  If there are two fragments or more, the last
%   fragment \meta{frag}${}_l$ is called the \emph{suffix} of the name
%   \meta{name}.  In case, when there is only one fragment, that is
%   when $l=1$, the suffix is empty.  If the suffix value \meta{suf}
%   is recognized by \latexclass{ngetest}, the mode is set to the
%   value, corresponding to \meta{suf}.
% \item If the mode is still undefined after step 2 (unknown or empty
%   suffix), the default mode is used.
% \end{enumerate}
% Class \latexpackage{ngetest} recognizes modes |test|, |answers| and
% |key|, and uses |test| as the default mode.  Suffixes |ans| and
% |sol| turn on mode |answers| and suffix |key| turns on mode |key|.
% More mode-suffix pairs may be added to this relation in
% \latexfile{nge.cfg} file with the help of |\NGE@DeclareModeSuffix|
% command.
%
% \paragraph{Changing separator.}
% It is possible to use another character for modesep.  Forbidden:
% blanks (space, tab, newline), braces and brackets.  Not recommended
% for internal reasons \%, \#, \~, backslash, but can use |,| and |=|
% as comma and equals.  Others should be okay internally.  Not
% recommended for external reasons on Unix pipe, < and >, ( and ),
% star and semicolon, dollar, slash, and also double quote, single
% quote and backquote, so is exclamation mark.  On Windows colon and
% question mark are not legit.  Out of remaining \@, \^, -, \_, +, =,
% . and , all but \@ seem to be good choices.
%
% \paragraph{To be rewritten}
% If no mode is specified explicitely, class \latexpackage{ngetest}
% tries to determine the mode by inspecting the file name.  If the
% file name has the form \meta{root}-\meta{suffix}|.tex|, then
% \latexclass{ngetest} compares \meta{suffix} agains the list of known
% suffixes and set the mode accordingly: for suffixes |ans| and |sol|
% mode |answers| is set and for suffix |key| mode |key| is selected.
% In all other cases, including the case when no suffix is present,
% the mode is set to the default value: |test|.
% If the mode is given explicitely, no guessing is performed.
% 
% The separator between \meta{root} and \meta{suffix} may be set to
% any character \meta{char} by specifying option |modesep=|\meta{char}.
% In case when the file name contains several occurrences of the
% separating character, it is broken by them characters into several
% fragments, and \meta{suffix} is then the last, 
% the tailing, fragment.  In case when there are no separating
% characters in the filename, \meta{suffix} is empty.  Thus filenames
% |exam-sol.tex| and |exam-1-sol.tex| have suffix |sol| and in
% filenames |exam.tex|, |exam-.tex|, and |exam--.tex| the suffix is empty. 
% In the former case the mode will be set by the guessing function to
% |answers| and in the latter the default mode, |test|, will be used.
% The default value for \option{modesep} is |-|.
% 
% Not all tex installations can handle filenames with spaces. So it's
% better to avoid them.  Watch out for using both |-| and |_| in the
% same filename.  We assume that modesep is a nonblank character.  One
% cannot use braces in the options line.
%
%
% \StopEventually{\PrintChanges\PrintIndex}
% \section{\LaTeX{} code}
% \label{sec:code}
%
%\iffalse
%<*ngetest>
%\fi
% 
% All the classes and styles in this package rely on \LaTeXe.  No
% support for earlier versions of \LaTeX{} is provided.
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\ProvidesClass{ngetest}
%    \end{macrocode}
% We reserve prefix |NGE| for internal definitions in \nged\ class
% and style files. 
%
% \subsection{Options and loaded packages}
% \label{sec:code-ngetest-options}
%
% Package \latexpackage{ifthen} provides useful control structures.
%    \begin{macrocode}
\RequirePackage{ifthen}
%    \end{macrocode}
% Options for the class \latexclass{ngetest} itself are specified with
% the help of package \latexpackage{pgfkeys} and processed with the
% help of package \latexpackage{pgfopts}.
%    \begin{macrocode}
%%\RequirePackage{pgfkeys}        % loaded by pgfopts
\RequirePackage{pgfopts}
%    \end{macrocode}
% 
% We store all the class options at path |/NGE/test/options|.  All
% these options need to be defined before they are processed.  The
% code below is quite simple, it mostly collects settings.  The actual
% processing takes places after all the packages are loaded.
%
%    \begin{macrocode}
%    \end{macrocode}
%
%    \begin{macrocode}
\pgfqkeys{/NGE/test/options/mode}{%
  .value required,
  .is choice,
  .unknown/.code={%
    \PackageWarning{ngetest}{%
      Ignoring unknown mode '\pgfkeyscurrentname'}}
}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand{\NGE@DeclareMode}[1]{%
  \pgfkeys{/NGE/test/options/mode/#1/.code={\def\NGEmode{#1}}}
  \expandafter\newcommand\expandafter{\csname if#1mode\endcsname}[1]{%
    \ifNGEmode{#1}{##1}{}}
  \NGE@DeclareModeComment{#1}%
  \AtEndOfClass{\ifNGEmode{#1}{}{\excludeversion{#1comment}}}
}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand\NGE@par{\par}
\newcommand{\NGE@DeclareModeComment}[1]{
  \pgfqkeys{/NGE/test/modes/#1/comment}{%
    header/.initial={},
    font/.initial={},
    precommenthook/.initial={},
    postcommenthook/.initial={},
    par/.initial={},
    inline/.code={\def\NGE@par{\relax}}
  }
  \newenvironment{#1comment}[1][]{%
    \pgfqkeys{/NGE/test/modes/#1/comment}{##1}%
    \pgfkeysvalueof{/NGE/test/modes/#1/comment/par}%
    \pgfkeysvalueof{/NGE/test/modes/#1/comment/header}%
    \pgfkeysvalueof{/NGE/test/modes/#1/comment/font}%
    \pgfkeysvalueof{/NGE/test/modes/#1/comment/precommenthook}%
  }{%
    \pgfkeysvalueof{/NGE/test/modes/#1/comment/postcommenthook}%
    \pgfkeysvalueof{/NGE/test/modes/#1/comment/par}%
  }
}
%    \end{macrocode}
%    \begin{macrocode}
\pgfqkeys{/NGE/test/options/modesep}{%
  .value required,
  .is choice,
  .unknown/.code={\let\NGE@modesep=\pgfkeyscurrentname},
  comma/.code={\def\NGE@modesep{,}},
  equals/.code={\def\NGE@modesep{=}},
}
%    \end{macrocode}
%    \begin{macrocode}
\pgfqkeys{/NGE/test/jobname/suffix}{%
  .is choice,
  .unknown/.code={\relax},
}
%    \end{macrocode}
%    
%    \begin{macrocode}
\pgfqkeys{/NGE/test/modes/.configure}{%
  default/.style={/NGE/test/options/mode/.initial=#1},
  modesep/.style={/NGE/test/options/modesep=#1},
  modesuffix/.style 2 args={%
    /NGE/test/jobname/suffix/#2/.style={%
      /NGE/test/options/mode=#1%
    }
  }
}
\newcommand{\NGE@ConfigureModes}[1]{%
  \pgfqkeys{/NGE/test/modes/.configure}{#1}}
\newcommand{\NGEConfigureModeComment}[2]{%
  \pgfqkeys{/NGE/test/modes/#1/comment}{#2}}
%    \end{macrocode}
%
%
%
%
%
%
%
%
%
%    \begin{macrocode}
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareOption{a4paper}{\PassOptionsToClass{a4paper}{article}}
\DeclareOption{a5paper}{\PassOptionsToClass{a5paper}{article}}
\DeclareOption{b5paper}{\PassOptionsToClass{b5paper}{article}}
\DeclareOption{letterpaper}{\PassOptionsToClass{letterpaper}{article}}
\DeclareOption{legalpaper}{\PassOptionsToClass{legalpaper}{article}}
\DeclareOption{executivepaper}{%
  \PassOptionsToClass{executivepaper}{article}}
\DeclareOption{landscape}{\PassOptionsToClass{landscape}{article}}
\DeclareOption{10pt}{\PassOptionsToClass{10pt}{article}}
\DeclareOption{11pt}{\PassOptionsToClass{11pt}{article}}
\DeclareOption{12pt}{\PassOptionsToClass{12pt}{article}}
\DeclareOption{oneside}{\PassOptionsToClass{oneside}{article}}
\DeclareOption{twoside}{\PassOptionsToClass{twoside}{article}}
\DeclareOption{draft}{\PassOptionsToClass{draft}{article}}
\DeclareOption{final}{\PassOptionsToClass{final}{article}}
\DeclareOption{titlepage}{\PassOptionsToClass{titlepage}{article}}
\DeclareOption{notitlepage}{\PassOptionsToClass{notitlepage}{article}}
\DeclareOption{onecolumn}{\PassOptionsToClass{onecolumn}{article}}
\DeclareOption{twocolumn}{\PassOptionsToClass{twocolumn}{article}}
\DeclareOption{leqno}{\PassOptionsToClass{leqno}{article}}
\DeclareOption{fleqn}{\PassOptionsToClass{fleqn}{article}}
\DeclareOption{openbib}{\PassOptionsToClass{openbib}{article}}
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareOption{nogroup}{\PassOptionsToPackage{nogroup}{versions}}
\DeclareOption{tracing}{\PassOptionsToPackage{tracing}{versions}}
%    \end{macrocode}
%
%    \begin{macrocode}
\DeclareOption*{\relax}
%    \end{macrocode}
%
%
%
%
%    \begin{macrocode}
\NGE@DeclareMode{test}
\NGE@DeclareMode{answers}
\NGE@DeclareMode{key}
\NGE@ConfigureModes{default=test,modesep={-},
  modesuffix={answers}{ans},
  modesuffix={answers}{sol},
  modesuffix={key}{key}}


\NGEConfigureModeComment{test}{font={\itshape},par={\NGE@par}}
\NGEConfigureModeComment{answers}{font={\itshape},par={\NGE@par}}
\NGEConfigureModeComment{key}{font={\itshape},par={\NGE@par}}

\InputIfFileExists{nge.cfg}{}{}%
\ExecuteOptions{}%
\ProcessPgfOptions{/NGE/test/options}%
\ProcessOptions%
%    \end{macrocode}
%
%    \begin{macrocode}
\LoadClass{article}%
%    \end{macrocode}
%
%    \begin{macrocode}
\RequirePackage{versions}%
%    \end{macrocode}
%    \begin{macrocode}
\newcommand{\NGE@ParseJobname}[1]{%
  \@onelevel@sanitize\NGE@modesep
  \edef\NGE@jobname{\jobname#1\noexpand\@nil#1}
  \def\NGE@Next##1#1{%
    \def\NGE@temp{##1}%
    \ifx\NGE@temp\@nnil\else\NGE@ProcessFragment{##1}\expandafter\NGE@Next\fi}%
  \def\NGE@suffix{}%
  \def\NGE@Suffix##1{\def\NGE@suffix{##1}}%
  \def\NGE@ProcessFragment##1{%
    \pgfkeys{/NGE/test/jobname/root/.initial={##1}}%
    \let\NGE@ProcessFragment=\NGE@Suffix}%
  \expandafter\NGE@Next\NGE@jobname}
%    \end{macrocode}
%    \begin{macrocode}
\@ifundefined{NGEmode}{%
  \ClassInfo{ngetest}{Document mode is not given,%
    deriving it from the file name}
  \pgfkeys{/NGE/test/options/mode/.get=\NGEmode}
  \expandafter\NGE@ParseJobname\expandafter{\NGE@modesep}%
  \ifthenelse{\equal{\NGE@suffix}{}}{}{%
    \pgfkeys{/NGE/test/jobname/suffix=\NGE@suffix}}
}{}
%    \end{macrocode}
%
%    \begin{macrocode}
\typeout{Using mode \NGEmode}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand{\ifNGEmode}[3]{\ifthenelse{\equal{\NGEmode}{#1}}{#2}{#3}}
%    \end{macrocode}
%
%
% \subsection{Tasks}
% \label{sec:code-ngetest-tasks}
%
%
% 
% In this section we define the generic environment for problems and
% questions, and provide means for its customization.
%
%   By default all the tasks are numbered consecutively with the help of
%   counter |NGEtask|.
%    \begin{macrocode}
\newcounter{NGEtask}
%    \end{macrocode}
% We also introduce counters for keeping track of number of points,
% assigned to each task.
%    \begin{macrocode}
\newcounter{NGEtaskpoints}
\newcounter{NGEpointstotal}
%    \end{macrocode}
%    \begin{macrocode}
\newboolean{NGEshowtaskpoints}
\newboolean{NGEunnumberedtask}
%    \end{macrocode}
%    \begin{macrocode}
%    \end{macrocode}
%    
%    
%    \begin{macrocode}
%    \end{macrocode}
%
%    \begin{macrocode}
\newcommand{\NGEtaskhead}{%
  \NGEtaskname\NGEtasknote%
  \pgfkeysvalueof{\NGE@taskpath/head/punctuation}}
\newcommand{\NGEtaskname}{%
  \pgfkeys{\NGE@taskpath/name/.get=\NGE@taskname}
  \begingroup\pgfkeysvalueof{\NGE@taskpath/head/font}%
    \ifthenelse{\equal{\pgfkeysvalueof{\NGE@taskpath/name}}{}}%
    {\ifthenelse{\boolean{NGEunnumberedtask}}%
      {\ClassWarning{ngetest}{empty task name in an unnumbered task}}%
      {\NGEtasknumber}}%
    {\ifthenelse{\boolean{NGEunnumberedtask}}%
      {\pgfkeysvalueof{\NGE@taskpath/name}}%
      {\pgfkeysvalueof{\NGE@taskpath/name}\space\NGEtasknumber}}%
  \endgroup
}
\newcommand{\NGEtasknote}{%
  \ifthenelse{\equal{\pgfkeysvalueof{\NGE@taskpath/note}}{}}%
  {\ifthenelse{\boolean{NGEshowtaskpoints}}%
    {\NGEtasknotemark{\NGEtaskpoints}}{}}%
  {\ifthenelse{\boolean{NGEshowtaskpoints}}%
    {\NGEtasknotemark{\pgfkeysvalueof{\NGE@taskpath},\space\NGEtaskpoints}}%
    {\NGEtasknotemark{\pgfkeysvalueof{\NGE@taskpath}}}}%
}
\newcommand{\NGEtasknotemark}[1]{\space(\begingroup%
  \pgfkeysvalueof{\NGE@taskpath/note/font}#1\endgroup)}
\newcommand{\NGEtaskpoints}{%
  \theNGEtaskpoints\space point%
  \ifthenelse{\value{NGEtaskpoints}=1}{}{s}}%
\newcommand{\NGEtasknumber}{%
  \ifthenelse{\boolean{NGEunnumberedtask}}{}{%
    \csname the\pgfkeysvalueof{\NGE@taskpath/counter}\endcsname}}
%    \end{macrocode}
% It is users responsibility to guarantee that counter exists.
%^^A see also
%^^A http://www.tex.ac.uk/cgi-bin/texfaq2html?label=isitanum
%    \begin{macrocode}
\newcommand{\NGEDeclareTask}[1]{
  \pgfqkeys{/NGE/test/tasks/#1}{%
    name/.initial=#1,
    counter/.initial={NGEtask},
    unnumbered/.initial={false},
    unnumbered/.default={true},
    showpoints/.initial={true},
    hidepoints/.style={/NGE/test/tasks/#1/showpoints={false}},
    nopoints/.style={/NGE/test/tasks/#1/hidepoints,%
      /NGE/test/tasks/#1/points=0},
    font/.initial={\normalfont},
    pretaskhook/.initial={},
    posttaskhook/.initial={},
    points/.initial={0},
    head/.initial={\NGEtaskhead},
    head/font/.initial={\normalfont\bfseries},
    head/punctuation/.initial={.},
    head/afterskip/.initial={},
    note/.initial={},
    note/font/.initial={\normalfont\itshape}}
  \newenvironment{#1}[1][]{%
    \begin{trivlist}%
      \def\NGE@taskpath{/NGE/test/tasks/#1}%
      \pgfqkeys{\NGE@taskpath}{##1}%
      \setboolean{NGEunnumberedtask}{%
        \pgfkeysvalueof{\NGE@taskpath/unnumbered}}%
      \setboolean{NGEshowtaskpoints}{%
        \pgfkeysvalueof{\NGE@taskpath/showpoints}}%
      \setcounter{NGEtaskpoints}{%
        \pgfkeysvalueof{\NGE@taskpath/points}}%
      \ifthenelse{\boolean{NGEunnumberedtask}}%
      {}%
      {\refstepcounter{\pgfkeysvalueof{\NGE@taskpath/counter}}}%
      \pgfkeysvalueof{\NGE@taskpath/pretaskhook}%
    \item[\pgfkeysvalueof{\NGE@taskpath/head}]%
      \pgfkeysvalueof{\NGE@taskpath/head/afterskip}%
      \pgfkeysvalueof{\NGE@taskpath/font}}%
    {\pgfkeysvalueof{\NGE@taskpath/posttaskhook}%
      \addtocounter{NGEpointstotal}{\value{NGEtaskpoints}}%
    \end{trivlist}}%
}
\newcommand{\NGEConfigureTask}[2]{%
  \pgfqkeys{/NGE/test/tasks/#1}{#2}}
%    \end{macrocode}
%    \begin{macrocode}
\NGEDeclareTask{NGEtask}
\NGEConfigureTask{NGEtask}{name=Question}
%    \end{macrocode}
%    
%
% Redefine macro |\theNGEtaskpoints| to expand number n to ``n points''.
%
% Point processing is done with the help of \latexpackage{pgfkeys}
% package.  Initially each task is assigned 0 points by default.  The
% number of points, assigned to a particular task may be specified
% with points option for |NGEtask| environment and the default
% assignment may be changed with the help of |\NGEtasks|
% command.
%    \begin{macrocode}
%    \end{macrocode}
% We also provide a quick way to turn off points counting temporarily
% for a particular task.
%    \begin{macrocode}
%    \end{macrocode}
% In the same way we treat the task name.
%    \begin{macrocode}
%    \end{macrocode}
% First we specify default settings for the task header.
%    \begin{macrocode}
%\newcommand{\NGEDeclareTask}[1]{%
%    \end{macrocode}
% \begin{macro}{NGEtask}
% Now we can define the environment itself.
%    \begin{macrocode}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{NGEtasks}
%   The command |\NGEtasks| sets default values for task options.
%    \begin{macrocode}
%    \end{macrocode}
% \end{macro}
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
%
% \paragraph{Infrastructure}
%    \begin{macrocode}
%    \end{macrocode}
% \paragraph{Modes}
% The code above accounts for possibility that mode may be specified
% more than once in the list of class options and processes settings
% consecutively.  For each setting |mode=|\meta{name} the code checks
% whether \meta{name} is a known mode name and if this is the case,
% the mode is set to \meta{name}.  Unknown mode names are ignored and
% a warning is issued.
%
%   Macro |\NGE@DeclareMode| creates the necessary keys for particular
%   setting and also for mode value \meta{val} it provides the
%   conditional |\ifvalmode|.
%    \begin{macrocode}
%    \end{macrocode}
% This switch checks whether the mode has value \meta{val} and if this
% is the case, executes its argument.  Otherwise it does nothing.
%
% The code below defines the three modes of \latexpackage{ngetest}.
%    \begin{macrocode}
%    \end{macrocode}
%
%    \begin{macrocode}
%    \end{macrocode}
%
%
% \paragraph{Options for other packages}
% First we pass options for classes and packages
% \latexpackage{ngetest} loads.
% Options for class \latexclass{article}:
% Options for package \latexpackage{versions}:
%
% Everything else given on |\documentclass| line is considered
% undeclared option and is passed for handling to
% \latexpackage{pgfopts} package.  The line below suppresses ``unused
% option'' warnings for unrecognized options.
%
%
% \paragraph{Determining mode.}
%
% 
%    \begin{macrocode}
%    \end{macrocode}
% The order of commands in the next code fragment is important.  First
% we load local configuration file, which may change default
% settings.  Then default options are processed and finally
% explicitely given options are processed.
%
% Now it is time to load all the packages, starting with
% \latexclass{article} class
%
% Package \latexpackage{version} is used to support modes and
% variants.
% \todo{Enable comments and redefine comment environment}
%
%^^A Put this reference where it belongs
%^^A See http://www.tex.ac.uk/cgi-bin/texfaq2html?label=compjobnam
% \todo{refactor for variants}
%    \begin{macrocode}
%    \end{macrocode}
%    \todo[inline]{add remark above why \texttt{NGE@ProcessModesep} and not \texttt{expandafter}}
% The code below  prepares  guessing functions to work with the
% specified value of \option{modesep}.
% The actual guessing is performed after all the class options have been
% collected and processed.
%
% The following command converts all the letters in a given string to
% category 12 (other) and stores the conversion in a PGF tree at given
% address. 
%
% I do not do it with \latexpackage{pgfkeys}, because parameter
% passing in embedded |\def|'s are tricky enough, so it is better to
% trace them explicitely.
%    \begin{macrocode}
%    \end{macrocode}
%
%    \begin{macrocode}
%    \end{macrocode}
% 
%
%    \begin{macrocode}
%    \end{macrocode}
%
% 
%    \begin{macrocode}
%    \end{macrocode}
%
% 
% \subsection{Answers and solutions}
% \label{sec:code-ngetest-answers}
%
%
% \begin{macro}{answer}
% In test mode everything enclosed between |\begin{answer}| and
% |\end{answer}| is skipped by \LaTeX.  In answers mode the actual job
% of |answer| is done by environment |NGEanswer|.
%\iffalse
%<*hide>
%\fi
%    \begin{macrocode}
\pgfqkeys{/NGE/test/answer}{%
  name/.store in=\NGEanswername,
  name/.default=Answer,
  font/.store in=\NGEanswerfont,
  font/.default=\normalfont,
  mark/font/.store in=\NGEanswermarkfont,
  mark/font/.default=\bfseries,
  mark/.store in=\NGEanswermark,
  mark/.default={\NGEanswermarkfont\NGEanswername:\space\NGEanswerfont}
}
\newenvironment{answer}[1][]{%
  \par%
  \begin{trivlist}%
    \pgfqkeys{/NGE/test/answer}{name,font,mark/font,mark,#1}%
  \item[\NGEanswermarkfont\NGEanswername]\NGEanswerfont\ignorespaces
}{\end{trivlist}}
\AtEndOfClass{\iftestmode{\excludeversion{answer}}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{NGEanswer} 
% At the moment |NGEanswer| is very simple, but I still have defined
% several components for the simplicity of customization.
%    \begin{macrocode}
%    \end{macrocode}
% \end{macro}
% In the same way one can define environments |solution| and |NGEsolution|.
% \begin{macro}{solution}
%
%    \begin{macrocode}
\pgfqkeys{/NGE/test/solution}{%
  name/.store in=\NGEsolutionname,
  name/.default=Solution,
  font/.store in=\NGEsolutionfont,
  font/.default=\normalfont,
  mark/font/.store in=\NGEsolutionmarkfont,
  mark/font/.default=\bfseries,
  mark/.store in=\NGEsolutionmark,
  mark/.default={\NGEsolutionmarkfont\NGEsolutionname:\space\NGEsolutionfont}
}
\newenvironment{solution}[1][]{%
  \begingroup%
  \pgfqkeys{/NGE/test/solution}{name,font,mark/font,mark,#1}%
  \NGEsolutionmark}{\par\endgroup}%
\AtEndOfClass{\iftestmode{\excludeversion{solution}}}%
%    \end{macrocode}   
% \end{macro}
% \begin{macro}{NGEsolution}
%
%    \begin{macrocode}
%    \end{macrocode}    
% \end{macro}
% In addition we enable instructor comments in answer mode, which are
% excluded by default.
% \begin{macro}{NGEcomment}
%    \begin{macrocode}
%    \end{macrocode}
% \end{macro}
% 
%    \begin{macrocode}
%    \end{macrocode}
% 
%
% \subsection{Marking guide}
% \label{sec:code-ngetest-marking-guide}
%
% In the same way we define commands and environments for the marking
% guide mode.
%    \begin{macrocode}
%    \end{macrocode}
% 
%    \begin{macrocode}
%\newenvironment{rubrics}{\begin{NGErubrics}}{\end{NGErubrics}}
%\newcounter{NGEtmp}
%\newenvironment{NGErubrics}{%
%  \pgfqkeys{/NGE/rubrics/.cd}{#1}\begin{description}}{\end{description}}
%\newcommand{\rubric}[1]{\setcounter{NGEtmp}{#1}\item[#1]}
%\ifthenelse{\boolean{NGEMarkingGuideMode}}{}{\excludeversion{rubrics}}
%    \end{macrocode}
%
%\iffalse
%</hide>
%</ngetest>
%\fi
% 
% \todo[inline]{Add to index references to \latexpackage{pgfkeys} tree used}
% \todo[inline]{Look up indexing commands for \latexpackage{doc}}
% \todo[inline]{Add to documentation DescribeOption and option macros}
% \todo[inline]{Make task declarations preamble only}
% \todo[inline]{How to hook tasks into existing environments?  Kernel
% and amsthm.}
%^^A \todo[inline]{}
%^^A \todo[inline]{}
%^^A \todo[inline]{}
% \Finale
% \iffalse
%<*test>
\documentclass[12pt]{ngetest}
\makeatletter
\newcommand{\showkey}[1]{%
\par\noindent  Key \texttt{#1} is
  \pgfkeysifdefined{#1}{%
    \ifthenelse{\equal{\pgfkeysvalueof{#1}}{}}{is empty}
    {has value \texttt{\pgfkeysvalueof{#1}}}}
  {is undefined}.}

\newcommand{\showmacro}[1]{%
\par\noindent  Macro \texttt{\char`\\ #1} \@ifundefined{#1}{is undefined}
  {\ifthenelse{\equal{\csname #1\endcsname}{}}{is empty}{has value
      \texttt{\csname #1\endcsname}}}.}
\begin{document}
This is a test file for class \texttt{ngetest}.

\subsection*{Modes}

\showkey{/NGE/test/options/mode}
\showmacro{NGEmode}
\showmacro{NGE@modesep}
\showkey{/NGE/test/jobname/root}
\showmacro{NGE@suffix}
\ifNGEmode{test}
{\par\noindent This line should be visible only in \texttt{test} mode.}
{\par\noindent This line should be visible in all modes other than \texttt{test}.}
\ifNGEmode{answers}
{\par\noindent This line should be visible only in \texttt{answers} mode.}
{\par\noindent This line should be visible in all modes other than \texttt{answers}.}
\ifNGEmode{key}
{\par\noindent This line should be visible only in \texttt{key} mode.}
{\par\noindent This line should be visible in all modes other than \texttt{key}.}
\iftestmode{\par\noindent This line should be visible only in \texttt{test} mode.}
\ifanswersmode{\par\noindent This line should be visible in \texttt{answers} mode only.}
\ifkeymode{\par\noindent This line should be visible in \texttt{key} mode only.}
\begin{testcomment}
  This is a test comment.  It is visible only in \texttt{test} mode.
\end{testcomment}
\begin{answerscomment}
  This is an answers comment.  It is visible only in \texttt{answers} mode.
\end{answerscomment}
\begin{keycomment}
  This is a key comment.  It is visible only in \texttt{key} mode.
\end{keycomment}
\begin{comment}
  This is a generic comment.  It must never be visible unless revealed
  explicitely with \verb+\includeversion+.
\end{comment}

\subsection*{Tasks}

\begin{NGEtask}
  This is the default task with default settings.\\\noindent
\end{NGEtask}
\begin{NGEtask}[name=Task]
  This is a task, whose name was changed.
\end{NGEtask}
\begin{NGEtask}[points=10]
  This is a task with modified number of points.
\end{NGEtask}
\begin{NGEtask}[unnumbered]
  This is a task without a number.
\end{NGEtask}
\begin{NGEtask}[name={}]
  This is a task without a name.
\end{NGEtask}
\begin{NGEtask}[hidepoints]
  This is a task with hidden point value.
\end{NGEtask}
\begin{NGEtask}[font=\sffamily]
  This is a task with modified body font.
\end{NGEtask}
\begin{NGEtask}[head={}]
  This is a task with disabled header.
\end{NGEtask}
\begin{NGEtask}[head/font={\ttfamily}]
  This is a task with modified head font.
\end{NGEtask}
\begin{NGEtask}[note/font={\ttfamily}]
  This is a task with modified note font.
\end{NGEtask}
\begin{NGEtask}[head/punctuation={:}]
  This is a task with modified punctuation sign after the header.
\end{NGEtask}

\newcounter{problem}
\NGEDeclareTask{problem}
\NGEConfigureTask{problem}{name=Problem, counter=problem, points=5}
Now we declare new type of tasks, which have different default
settings and are numbered separately from the previous sequence of tasks.
\begin{problem}
  Here is a problem with default settings.
\end{problem}
\begin{problem}[points=10]
  Here is another problem with modified number of points.
\end{problem}
\begin{problem}[name={Bonus problem}, nopoints, unnumbered]
  This problem has modified title and is assigned no points.
\end{problem}
\renewcommand{\theNGEtask}{\Roman{NGEtask}}
\begin{NGEtask}[name=Problem, points=5]
  Here is another question from the default series.  It has been
  modified to look like a problem, but is numbered together with other
  tasks, not with problems.  The numbering style has been changed to
  roman numerals though.
\end{NGEtask}
\begin{problem}[name=Consolation task, unnumbered]
  Here is another problem without a number.
\end{problem}
\begin{problem}
  Last problem with default settings.
\end{problem}

Let us continue with task options testing.
\begin{NGEtask}[points=10]
  This is the second task.  Ten points are assigned to it.
\end{NGEtask}
\begin{NGEtask}[points=50,name=Problem]
  This task is a problem, it is 50 points worth.
\end{NGEtask}
\begin{NGEtask}
  This is the task with the new default settings.
\end{NGEtask}
\begin{NGEtask}[points=15]
  This task is worth 15 points.
\end{NGEtask}
\begin{NGEtask}[name=Practical task]
  This task has modified name and default number of points.
\end{NGEtask}
\begin{NGEtask}[name=Consolation problem, note=bonus, points=1]
  This task has modified name and is assigned one point.  It also has
  a note in it.
\end{NGEtask}


%\iffalse
%<*hide>
%\fi
\begin{answer}
  The answer must not show up in the task mode.
\end{answer}
\begin{solution}
  Problems have both solution and
\end{solution}
\begin{answer}
  answers
\end{answer} 
%\iffalse
%</hide>
%\fi
\end{document}
%</test>
% \fi
%^^A Local Variables:
%^^A TeX-master: t
%^^A End:
