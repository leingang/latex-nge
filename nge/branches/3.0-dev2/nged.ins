%%
%% Copyright (C) 2003--9 by Matthew Leingang <leingang@courant.nyu.edu>
%%
%% This file may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License, either version 1.2 of this license
%% or (at your option) any later version.  The latest version of this
%% license is in:
%% 
%%    http://www.latex-project.org/lppl.txt
%% 
%% and version 1.2 or later is part of all distributions of LaTeX version
%% 1999/12/01 or later.
%%
\input docstrip.tex
%\keepsilent
\askforoverwritefalse

\usedir{tex/latex/nged}

\preamble

This is a generated file.

Copyright (C) 2003--10 by Matthew Leingang <leingang@courant.nyu.edu>

This file may be distributed and/or modified under the conditions of
the LaTeX Project Public License, either version 1.2 of this license
or (at your option) any later version.  The latest version of this
license is in:

   http://www.latex-project.org/lppl.txt

and version 1.2 or later is part of all distributions of LaTeX version
1999/12/01 or later.

\endpreamble

% \section{File Generation}

\generate{\file{ngeexam.cls}{\from{\jobname.dtx}{examclass}}
          \file{ngequiz.cls}{\from{\jobname.dtx}{quizclass}}
          \file{ngewksht.cls}{\from{\jobname.dtx}{worksheetclass}}
          \file{ngeform.sty}{\from{\jobname.dtx}{forms}}
          \file{ngeprob.sty}{\from{\jobname.dtx}{problems}}         
          \file{ngever.sty}{\from{\jobname.dtx}{versions}}         
          \file{ngevar.sty}{\from{\jobname.dtx}{variants}}
          \file{ngemode.sty}{\from{\jobname.dtx}{modes}}
          \file{ngemisc.sty}{\from{\jobname.dtx}{misc}}
          \file{\jobname.drv}{\from{\jobname.dtx}{driver}}
	  \file{example.tex}{\from{\jobname.dtx}{example}}
          \file{test_exam1.tex}{\from{\jobname.dtx}{examunit1}}
          \file{test_exam2.tex}{\from{\jobname.dtx}{examunit2}}
          \file{test_exam3.tex}{\from{\jobname.dtx}{examunit3}}
}

% \subsection{User message}

\Msg{***************************************************************}
\Msg{*}
\Msg{* To finish the installation you have to move all .cls and}
\Msg{* .sty files into a directory searched by TeX:}
\Msg{*}
\Msg{* To produce the documentation run the file \jobname.dtx}
\Msg{* through LaTeX.}
\Msg{*}
\Msg{* Happy TeXing}
\Msg{***********************************************************}


% \section{Config file generation}
% 
% This is content generated by TeX, not stripped from the \fn{.dtx} file.
%
%    \begin{macrocode}
\documentclass{minimal}
\usepackage{svninfo}
\svnInfo $Id: nged.dtx 516 2009-08-28 20:11:08Z leingang $
\svnKeyword $HeadURL: https://subversive.cims.nyu.edu/mathclinical/nged/branches/3.0-dev1/nged.dtx $
\edef\ngefiledate{\svnInfoMaxYear/\svnInfoMaxMonth/\svnInfoMaxDay}
%    \end{macrocode}
%   
% I think at some point this snippet of code should be part of a package, but it needs scoping.
% Many parsed files (documents and packages) could have subversion information.
% I think the better implementation would be to store in a hash based on \jobname or \@currname,
% or maybe just to give an argument to |\parseSvnInfoHeadURL| that will prefix the csname.
%
%    \begin{macrocode}
% parse the URL to get the branch/tag/trunk
\makeatletter
\def\ngesvnInfoBranch{--branch--}
\def\ngesvnInfoTag{--tag--}
\newif\ifngesvnInfoIsBranch\ngesvnInfoIsBranchfalse
\newif\ifngesvnInfoIsTag\ngesvnInfoIsTagfalse
\newif\ifngesvnInfoIsTrunk\ngesvnInfoIsTrunkfalse
\def\@parseSvnInfoHeadURL@branchflag{branches}
\def\@parseSvnInfoHeadURL@tagflag{tags}
\def\@parseSvnInfoHeadURL@trunkflag{trunk}
\def\@parseSvnInfoHeadURL@branch#1/#2/\relax/{\ngesvnInfoIsBranchtrue\xdef\ngesvnInfoBranch{#1}}
\def\@parseSvnInfoHeadURL@tag#1/#2/\relax/{\ngesvnInfoIsTagtrue\xdef\ngesvnInfoTag{#1}}
\def\@parseSvnInfoHeadURL@trunk#1/\relax/{\ngesvnInfoIsTrunktrue}
\def\parseSvnInfoHeadURL{\expandafter\@parseSvnInfoHeadURL\svnInfoHeadURL/\relax/}
\def\@parseSvnInfoHeadURL#1/{
	\let\@parseSvnInfoHeadURL@next=\relax
	\ifx\relax#1
		\let\@parsesvnInfoHeadURL@next=\empty%
	\else
		\ifthenelse{\equal{#1}{\@parseSvnInfoHeadURL@branchflag}}
			{\let\@parseSvnInfoHeadURL@next=\@parseSvnInfoHeadURL@branch}
		    {\ifthenelse{\equal{#1}{\@parseSvnInfoHeadURL@tagflag}}
				{\expandafter\@parseSvnInfoHeadURL@tag}
				{\ifthenelse{\equal{#1}{\@parseSvnInfoHeadURL@trunkflag}}
					{\let\@parseSvnInfoHeadURL@next=\@parseSvnInfoHeadURL@trunk}
					{\let\@parseSvnInfoHeadURL@next=\@parseSvnInfoHeadURL}}}
	\fi
	\expandafter\@parseSvnInfoHeadURL@next
}
\parseSvnInfoHeadURL
\ifngesvnInfoIsBranch
	\xdef\ngefileversion{b\ngesvnInfoBranch}
\fi
\ifngesvnInfoIsTag
	\xdef\ngefileversion{v\ngesvnInfoTag}
\fi
\makeatother

\newwrite\configfile
\immediate\openout\configfile=nged.def
\immediate\write\configfile{\string\def\string\ngefiledate{\ngefiledate}}
\immediate\write\configfile{\string\def\string\ngefileversion{\ngefileversion}}
\immediate\write\configfile{\string\def\string\ngesvnInfoBranch{\ngesvnInfoBranch}}
\immediate\write\configfile{\string\def\string\ngesvnInfoTag{\ngesvnInfoTag}}
\immediate\closeout\configfile
\begin{document}
\end{document}
%    \end{macrocode}
\endbatchfile
