% \iffalse meta-comment
% !TEX program  = pdfLaTeX
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
svnurl.sty --- Parse a subversion URL 
E-mail: leingang@courant.nyu.edu
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

Some text about the package: probably the same as the abstract.
%</readme>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
svnurl.sty --- Parse a subversion URL 
E-mail: leingang@courant.nyu.edu
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2010 by You <you@your.domain>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
You.

This work consists of the file  svnurl.dtx
and the derived files           svnurl.ins,
                                svnurl.pdf and
                                svnurl.sty.

\endpostamble
\usedir{tex/latex/svnurl}
\generate{
  \file{\jobname.sty}{\from{\jobname.dtx}{package}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/svnurl}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/svnurl}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*package>
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{svnurl}[2010/05/02 v0.1 Parse subversion URL]
%</package>
%<*driver>
\documentclass{ltxdoc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage{\jobname}

%^^A\svnInfo $Id: nged.dtx 768 2010-04-30 04:00:18Z leingang $
%^^A\svnKeyword $HeadURL: https://subversive.cims.nyu.edu/mathclinical/nge/branches/3.0-dev2/nged.dtx $
%^^A\parseSvnInfoHeadURL

\usepackage[numbered]{hypdoc}
\let\pkg=\textsf
\let\cmd=\texttt
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
% 
%\GetFileInfo{\jobname.sty}
%
%\title{^^A
%  \textsf{svnurl} --- Parse the subversion URL\thanks{^^A
%    This file describes version \fileversion, last revised \filedate.^^A
%  }^^A
%}
%\author{^^A
%  Matthew Leingang\thanks{E-mail: leingang@courant.nyu.edu}^^A
%}
%\date{Released \filedate}
%
%\maketitle
%
%\changes{v0.1}{2010/05/02}{Extracted from NGE code and made its own package}
%
% The \pkg{svninfo} package parses the keywords substituted by the \cmd{subversion}
% source control management system, and sets some macros accordingly.  We wished to 
% also extract the bundle version (branch or tag).
%
% \section{Interface}
% 
%\DescribeMacro{\parseSvinInfoHeadURL}
% Some text about an example macro called \cs{examplemacro}, which
% might have an optional argument \oarg{arg1} and mandatory one
% \marg{arg2}. 
%
%\StopEventually{^^A
%  \PrintChanges
%  \PrintIndex
%}
%
%  
% \section{Implementation}
%
%    \begin{macrocode}
%<*package>
\RequirePackage{svninfo}
\PassOptionsToPackage{final,nofancy}{svninfo}
%\RequirePackage{xspace}

\def\svnInfoBranch{--branch--}
\def\svnInfoTag{--tag--}
\newboolean{svnurlisbranch}
\newboolean{svnurlistag}
\newboolean{svnurlistrunk}

\def\@parseSvnInfoHeadURL@branchflag{branches}
\def\@parseSvnInfoHeadURL@tagflag{tags}
\def\@parseSvnInfoHeadURL@trunkflag{trunk}
\def\@parseSvnInfoHeadURL@branch#1/#2/\relax/{%
  \setboolean{svnurlisbranch}{true}%
  \xdef\svnInfoBranch{#1}}
\def\@parseSvnInfoHeadURL@tag#1/#2/\relax/{%
  \setboolean{svnurlistag}{true}%
  \xdef\svnInfoTag{#1}}
\def\@parseSvnInfoHeadURL@trunk#1/\relax/{%
  \setboolean{svnurlistrunk}{true}}
\def\parseSvnInfoHeadURL{\expandafter\@parseSvnInfoHeadURL\svnInfoHeadURL/\relax/}
\def\@parseSvnInfoHeadURL#1/{
	\let\@parseSvnInfoHeadURL@next=\relax
	\ifx\relax#1
		\let\@parsesvnInfoHeadURL@next=\empty%
	\else
		\ifthenelse{\equal{#1}{\@parseSvnInfoHeadURL@branchflag}}
			{\let\@parseSvnInfoHeadURL@next=\@parseSvnInfoHeadURL@branch}
		    {\ifthenelse{\equal{#1}{\@parseSvnInfoHeadURL@tagflag}}
				{\let\@parseSvnInfoHeadURL@next=\@parseSvnInfoHeadURL@tag}
				{\ifthenelse{\equal{#1}{\@parseSvnInfoHeadURL@trunkflag}}
					{\let\@parseSvnInfoHeadURL@next=\@parseSvnInfoHeadURL@trunk}
					{\let\@parseSvnInfoHeadURL@next=\@parseSvnInfoHeadURL}}}
	\fi
	\expandafter\@parseSvnInfoHeadURL@next
}
\@svnInfoDraft@false
\AtBeginDocument{\makeatletter\@svnInfoDraft@false\makeatother}
%</package>
%    \end{macrocode}
%\Finale
