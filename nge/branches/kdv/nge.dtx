% \iffalse
%<*ins>
\def\plainTeXname{plain}
\ifx\fmtname\plainTeXname
\input docstrip.tex
\keepsilent\askforoverwritefalse
\nopreamble\nopostamble
\generate{\file{ngetest.cls}{\from{\jobname.dtx}{ngetest}}
  \file{nge.drv}{\from{\jobname.dtx}{driver}}
  \file{test.tex}{\from{\jobname.dtx}{test,default}}
  \file{test-ans.tex}{\from{\jobname.dtx}{test,default}}
  \file{test-key.tex}{\from{\jobname.dtx}{test,default}}
  \file{test_.tex}{\from{\jobname.dtx}{test,underscore}}
  \file{test_ans.tex}{\from{\jobname.dtx}{test,underscore}}
  \file{test_key.tex}{\from{\jobname.dtx}{test,underscore}}
%  \file{test\space.tex}{\from{\jobname.dtx}{test,space}}
%  \file{test{ }ans.tex}{\from{\jobname.dtx}{test,space}}
%  \file{test{ }key.tex}{\from{\jobname.dtx}{test,space}}
  \file{test,.tex}{\from{\jobname.dtx}{test,comma}}
  \file{test,ans.tex}{\from{\jobname.dtx}{test,comma}}
  \file{test,key.tex}{\from{\jobname.dtx}{test,comma}}
}
\expandafter\endbatchfile
\fi
%</ins>
%<*hide>
\documentclass[draft]{ltxdoc}
%</hide>
%<*driver>
%<driver>\documentclass[final]{ltxdoc}
%\usepackage{ifthen}
\usepackage{ifdraft}
\usepackage[obeyDraft,dvistyle]{todonotes}
\usepackage{showkeys}
\usepackage{svninfo}
\providecommand{\fileversion}{}
\providecommand{\filename}{}
\renewcommand{\filename}[1]{\texttt{#1}}

\EnableCrossrefs
\CodelineIndex
\RecordChanges

\newcommand{\package}[1]{\textsf{#1}}
\newcommand{\latexclass}[1]{\textsf{#1}}
\newcommand{\latexpackage}[1]{\textsf{#1}}
\newcommand{\option}[1]{\textsl{#1}}
\newcommand{\optionvalue}[1]{\texttt{#1}}
\newcommand{\mode}[1]{\textsl{#1}}
\newcommand{\nged}{\package{NGEd}}
\begin{document}
  \MakeShortVerb{\|}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \svnInfo $Id$ %^^A
% \renewcommand{\fileversion}{development version, revision \svnInfoRevision}
% \ProvidesFile{\svnInfoFile}[^^A
% \svnInfoYear/\svnInfoMonth/\svnInfoDate\space\fileversion: NGEd source file.]
%
% \DoNotIndex{\RequirePackage,\LoadClass,\addtocounter,\arabic,\begin,
%     \begingroup,\end,\endgroup,\bfseries,\boolean,\CurrentOption,
%   \DeclareOption,\excludeversion,\ExecuteOptions,\ifthenelse,
%   \includeversion,\item,\itshape,\NeedsTeXFormat,\newboolean,\newcommand,
%   \newcounter,\newenvironment,\renewcommand,\renewenvironment,\normalfont,
%   \or,\par,\PassOptionsToClass,\pgfkeys,\pgfqkeys,\ProcessOptions,
%   \ProvidesClass,\ProvidesPackage,\refstepcounter,\setboolean,\setcounter,
%   \sffamily,\slshape,\textbf,\textit,\value,\def,\edef,\if,\ifx,\else,\fi,
%   \equal,\expandafter,\noexpand,\let,\jobname,\@nil,\@nnil,
%   \InputIfFileExists,\meaning,\PassOptionsToPackage,\pgfkeysifdefined,
%   \pgfkeyscurrentname,\relax,\space,\string,\ProcessPgfOptions,
%   \ClassWarning}
%
% \title{\nged: A Next Generation Educational Bundle\\ \fileversion}
% \author{Matthew Leingang\\leingang@courant.nyu.edu
%   \and Denis Kosygin\\kosygin@courant.nyu.edu}
% \renewcommand{\date}{\svnToday}
% \maketitle
% \tableofcontents
% \listoftodos
%
% \section{User manual}
% \label{sec:user-ngetest}
%
% \subsection{Options}
% \label{sec:user-ngetest-options}
%
% Class \latexclass{ngetest} is derived from the standard \LaTeX\
% class \latexclass{article}.  It accepts all the options of
% \latexclass{article} class:
% \option{a4paper},
% \option{a5paper},
% \option{b5paper},
% \option{letterpaper},
% \option{legalpaper},
% \option{executivepaper},
% \option{landscape},
% \option{10pt},
% \option{11pt},
% \option{12pt},
% \option{oneside},
% \option{twoside},
% \option{draft},
% \option{final},
% \option{titlepage},
% \option{notitlepage},
% \option{onecolumn},
% \option{twocolumn},
% \option{leqno},
% \option{fleqn}, and
% \option{openbib}.
% Most of these options have the same meaning in class
% \latexclass{ngetest} as in \latexclass{article}.  All the
% differences are explicitely specified below.
% 
% Class \latexclass{ngetest} uses package \latexpackage{versions} and
% accepts options \option{nogroup} and \option{tracing}, which have
% the same meaning in class \latexclass{ngetest} as in package
% \latexpackage{versions}.
%
% In addition class \latexclass{ngetest} has its own options which are
% described in the rest of this section.  As opposed to options for
% standard \LaTeX{} classes most of \latexclass{ngetest} own options
% may accept values.  Value \meta{value} may be given to
% \latexclass{ngetest} option \meta{option} by specification
% \meta{option}|=|\meta{value} in the options argument to
% \latexclass{ngetest}.  For example, the line
% \begin{verbatim}
% \documentclass[12pt,mode=answers]{ngetest}
% \end{verbatim}
% specifies two options for \latexclass{ngetest}: option \option{12pt}
% and \option{mode}.  Option \option{12pt} is the standard option for
% \LaTeX\ class \latexclass{article} and it has the same effect in
% \latexclass{ngetest}, it sets the font size to 12 points.  Option
% \option{mode} is \latexclass{ngetest}'s own mode and the assignment
% |mode=answers| above sets the document mode to |answers|.  Note that
% no spaces are allowed in assignmens \meta{option}|=|\meta{value}.
% If option \meta{option} accepts no value, it is specified in the
% class' option list as \meta{option}.
%  
%
% Here is the complete list of \latexclass{ngetest}'s own options
% with the description of accepted values.
% \begin{description}
% \item[\option{mode}] determines which parts of the document are
%   typeset. Accepts values \optionvalue{test}, \optionvalue{answers}
%   and \optionvalue{key}.  If the mode is not specified
%   \latexclass{ngetest} tries to guess the mode by inspecting the
%   filename.  All the guessing is turned off if \option{mode} is
%   assigned explicitely in |\documentclass| line.  For details see
%   section \ref{sec:user-ngetest-modes}.
% \item[\option{modesep}] specifies how the file name of latex job is
%   split in parts, which are inspected to determine the mode.
%   Accepts a nonempty string of characters which typically is a
%   one-character string.  Default is \optionvalue{-}.  Since it may
%   be difficult or impossible to set \option{modesep} explicitely to
%   some characters in |\documentclass| line, keywords are reserved
%   for underscore, comma and space characters as \option{modesep}
%   values.  For details see section \ref{sec:user-ngetest-modes}.
% \end{description}
%
% \subsection{Modes}
% \label{sec:user-ngetest-modes}
%\todo{Rewrite!}
% Class \latexclass{ngetest} is the generic class for producing tests:
% exams, quizzes, questionnaires, and so on\ldots.  From each source
% file one can produce three types of documents: the test itself, the
% test with solutions to problems and answers to questions, and
% marking guide for the test with the answer key and marking rubrics.
% Accordingly we distinguish three modes for the document processing:
% \emph{test} mode, \emph{answers} mode, and \emph{marking key}
% mode. Test and answers modes are mutually exclusive, the marking
% guide mode is an extension to the answers mode.
%
% By default if class \latexclass{ngetest} is used without options, the
% document is processed in test mode.  Option \option{answers}
% switches to answers mode and option \option{markingguide} typesets
% all solutions and answers together with marking rubrics.
%
% Mode may be specified explicitely as an option to
% \latexclass{ngetest}.  Possible values are |test| (this is the
% default), |answers| and |key|.
%
%
% \StopEventually{\PrintChanges\PrintIndex}
% \section{\LaTeX{} code}
% \label{sec:code}
%
%\iffalse
%<*ngetest>
%\fi
% 
% All the classes and styles in this package rely on \LaTeXe.  No
% support for earlier versions of \LaTeX{} is provided.
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}
\ProvidesClass{ngetest}
%    \end{macrocode}
% We reserve prefix |NGE| for internal definitions in \nged class
% and style files. 
%
% \subsection{Options and loaded packages}
% \label{sec:code-ngetest-options}
%
% \todo[inline]{Think through the layout of initialization part and where to
% input local cfg file.}
% Package \latexpackage{ifthen} provides useful control structures.
%    \begin{macrocode}
\RequirePackage{ifthen}
%    \end{macrocode}
% Options for the class \latexclass{ngetest} itself are specified with
% the help of package \latexpackage{pgfkeys} and processed with the
% help of package \latexpackage{pgfopts}.
%    \begin{macrocode}
%%\RequirePackage{pgfkeys}        % loaded by pgfopts
\RequirePackage{pgfopts}
%    \end{macrocode}
% 
% We store all the class options at path |/NGE/test/options|.  All
% these options need to be defined before they are processed.
%
% First we pass options for classes and packages
% \latexpackage{ngetest} loads.
%
% Options for class \latexclass{article}:
%    \begin{macrocode}
\DeclareOption{a4paper}{\PassOptionsToClass{a4paper}{article}}
\DeclareOption{a5paper}{\PassOptionsToClass{a5paper}{article}}
\DeclareOption{b5paper}{\PassOptionsToClass{b5paper}{article}}
\DeclareOption{letterpaper}{\PassOptionsToClass{letterpaper}{article}}
\DeclareOption{legalpaper}{\PassOptionsToClass{legalpaper}{article}}
\DeclareOption{executivepaper}{\PassOptionsToClass{executivepaper}{article}}
\DeclareOption{landscape}{\PassOptionsToClass{landscape}{article}}
\DeclareOption{10pt}{\PassOptionsToClass{10pt}{article}}
\DeclareOption{11pt}{\PassOptionsToClass{11pt}{article}}
\DeclareOption{12pt}{\PassOptionsToClass{12pt}{article}}
\DeclareOption{oneside}{\PassOptionsToClass{oneside}{article}}
\DeclareOption{twoside}{\PassOptionsToClass{twoside}{article}}
\DeclareOption{draft}{\PassOptionsToClass{draft}{article}}
\DeclareOption{final}{\PassOptionsToClass{final}{article}}
\DeclareOption{titlepage}{\PassOptionsToClass{titlepage}{article}}
\DeclareOption{notitlepage}{\PassOptionsToClass{notitlepage}{article}}
\DeclareOption{onecolumn}{\PassOptionsToClass{onecolumn}{article}}
\DeclareOption{twocolumn}{\PassOptionsToClass{twocolumn}{article}}
\DeclareOption{leqno}{\PassOptionsToClass{leqno}{article}}
\DeclareOption{fleqn}{\PassOptionsToClass{fleqn}{article}}
\DeclareOption{openbib}{\PassOptionsToClass{openbib}{article}}
%    \end{macrocode}
% Options for package \latexpackage{versions}:
%    \begin{macrocode}
\DeclareOption{nogroup}{\PassOptionsToPackage{nogroup}{versions}}
\DeclareOption{tracing}{\PassOptionsToPackage{tracing}{versions}}
%    \end{macrocode}
% Everything else given on |\documentclass| line is considered
% undeclared option and is passed for handling to
% \latexpackage{pgfopts} package.  The line below suppresses ``unused
% option'' warnings for unrecognized options.
%    \begin{macrocode}
\DeclareOption*{\relax}
%    \end{macrocode}
%
%
% 
% \paragraph{Modes}
%
%
%
% First we define mode setting function when the mode is explicitely
% given as an option.
%    \begin{macrocode}
\pgfqkeys{/NGE/test/options/mode}{%
  .default=test,
  .is choice,
  .unknown/.code=\ClassWarning{ngetest}{%
    Ignoring unknown mode '\pgfkeyscurrentname'}}
\newcommand\NGE@DeclareMode[1]{%
  \pgfkeys{%
    /NGE/test/options/mode/#1/.style={/NGE/test/options/mode/.initial=#1}}%
}
\NGE@DeclareMode{test}
\NGE@DeclareMode{answers}
\NGE@DeclareMode{key}
%    \end{macrocode}
%    \begin{macrocode}
\pgfqkeys{/NGE/test/jobname/suffix}{%
  .is choice,
  .unknown/.style=}
\newcommand{\NGE@DeclareModeSuffix}[2]{%
  \pgfkeys{%
    /NGE/test/jobname/suffix/#2/.style={/NGE/test/options/mode=#1}}}
\NGE@DeclareModeSuffix{answers}{ans}
\NGE@DeclareModeSuffix{answers}{sol}
\NGE@DeclareModeSuffix{key}{key}
%    \end{macrocode}
%    
% The code above accounts for possibility that mode may be specified
% more than once in the list of class options and processes settings
% consecutively.  For each setting |mode=|\meta{name} the code checks
% whether \meta{name} is a known mode name and if this is the case,
% the mode is set to \meta{name}.  Unknown mode names are ignored and
% a warning is issued.
%
% \todo{Move this part to user guide}
% If no mode is specified explicitely, class \latexpackage{ngetest}
% tries to determine the mode by inspecting the file name.  If the
% file name has the form \meta{root}-\meta{suffix}|.tex|, then
% \latexclass{ngetest} compares \meta{suffix} agains the list of known
% suffixes and set the mode accordingly: for suffixes |ans| and |sol|
% mode |answers| is set and for suffix |key| mode |key| is selected.
% In all other cases, including the case when no suffix is present,
% the mode is set to the default value: |test|.
% If the mode is given explicitely, no guessing is performed.
% 
% The separator between \meta{root} and \meta{suffix} may be set to
% any character \meta{char} by specifying option |modesep=|\meta{char}.
% In case when the file name contains several occurrences of the
% separating character, it is broken by them characters into several
% fragments, and \meta{suffix} is then the last, 
% the tailing, fragment.  In case when there are no separating
% characters in the filename, \meta{suffix} is empty.  Thus filenames
% |exam-sol.tex| and |exam-1-sol.tex| have suffix |sol| and in
% filenames |exam.tex|, |exam-.tex|, and |exam--.tex| the suffix is empty. 
% In the former case the mode will be set by the guessing function to
% |answers| and in the latter the default mode, |test|, will be used.
% The default value for \option{modesep} is |-|.\todo{Refactor
% using kernel command \texttt{@sanitize}}
%    \begin{macrocode}
\pgfqkeys{/NGE/test/options/modesep}{%
  .is choice,
  .default=-,
  space/.code={\let\NGE@modesep=\space},
  comma/.code={\def\NGE@modesep{,}},
  .unknown/.code={\let\NGE@modesep=\pgfkeyscurrentname}
}
%    \end{macrocode}
%    \begin{macrocode}
\InputIfFileExists{nge.cfg}{}{}%
\pgfkeys{/NGE/test/options/modesep}%
\ExecuteOptions{}%
\ProcessPgfOptions{/NGE/test/options}%
\ProcessOptions%
\LoadClass{article}%
%    \end{macrocode}
% Package \latexpackage{version} is used to support modes and
% variants.
% \todo{Enable comments and redefine comment environment}
%    \begin{macrocode}
\RequirePackage{versions}%
%    \end{macrocode}
%^^A Put this reference where it belongs
%^^A See http://www.tex.ac.uk/cgi-bin/texfaq2html?label=compjobnam
% \todo{Conversion should be done unconditionally, for variants}
%    \begin{macrocode}
\pgfkeysifdefined{/NGE/test/options/mode}{}{%
  \pgfkeys{/NGE/test/options/.cd,
    mode}
%    modesep/.convert/.expanded=\NGE@modesep}
  \edef\NGE@modesep{\expandafter\strip@prefix\meaning\NGE@modesep}
  \edef\NGE@jobname{\jobname\NGE@modesep\noexpand\@nil\NGE@modesep}
  \def\NGE@suffix{}
  \def\NGE@StoreSuffix#1{%
    \def\NGE@StoreSuffix##1{\def\NGE@suffix{##1}}}
  \newcommand{\NGE@ProcessModesep}[1]{%
    \def\NGE@last##1#1{%
      \def\NGE@temp{##1}
      \ifx\NGE@temp\@nnil\else\NGE@StoreSuffix{##1}\expandafter\NGE@last\fi}}
  \expandafter\NGE@ProcessModesep\expandafter{\NGE@modesep}
  \expandafter\NGE@last\NGE@jobname
  \ifthenelse{\equal{\NGE@suffix}{}}{}{%
    \pgfkeys{/NGE/test/jobname/suffix/.expanded=\NGE@suffix}}
}
%    \end{macrocode}
%    \todo[inline]{add remark above why \texttt{NGE@ProcessModesep} and not \texttt{expandafter}}
%\iffalse
%<*hide>
%\fi
%
% The code below  prepares  guessing functions to work with the
% specified value of \option{modesep}.
% The actual guessing is performed after all the class options have been
% collected and processed.
%
% The following command converts all the letters in a given string to
% category 12 (other) and stores the conversion in a PGF tree at given
% address. 
%
% I do not do it with \latexpackage{pgfkeys}, because parameter
% passing in embedded |\def|'s are tricky enough, so it is better to
% trace them explicitely.
%    \begin{macrocode}
%    \end{macrocode}
% \todo[inline]{Refactor without boolean}
%    \begin{macrocode}
\DeclareOption{answers}{\def\NGEtestmode{answers}\setboolean{NGEAnswersMode}{true}}
\DeclareOption{markingguide}{\setboolean{NGEAnswersMode}{true}%
  \setboolean{NGEMarkingGuideMode}{true}}
\ProcessOptions
%    \end{macrocode}
% 
%
%    \begin{macrocode}
%    \end{macrocode}
%
% 
%    \begin{macrocode}
%    \end{macrocode}
%
% \subsection{Tasks}
% \label{sec:code-ngetest-tasks}
%
% \todo[inline]{Refactor with \latexpackage{pgfkeys}}
% In this section we define the generic environment for problems and
% questions, and provide means for its customization.
%
%   By default all the tasks are numbered consecutively with the help of
%   counter |NGEtask|.
%    \begin{macrocode}
\newcounter{NGEtask}
%    \end{macrocode}
% We also introduce counters for keeping track of number of points,
% assigned to each task.
%    \begin{macrocode}
\newcounter{NGEtaskpoints}
\newcounter{NGEpointstotal}
%    \end{macrocode}
% Redefine macro |\theNGEtaskpoints| to expand number n to ``n points''.
%    \begin{macrocode}
\renewcommand{\theNGEtaskpoints}{%
\arabic{NGEtaskpoints} point\ifthenelse{\value{NGEtaskpoints} = 1}{}{s}}
%    \end{macrocode}
% Point processing is done with the help of \latexpackage{pgfkeys}
% package.  Initially each task is assigned 0 points by default.  The
% number of points, assigned to a particular task may be specified
% with points option for |NGEtask| environment and the default
% assignment may be changed with the help of |\NGEtasks|
% command.\todo{Allow for nonnumeric argument (e.g. \texttt{parts} or \texttt{subparts}(?))}
%    \begin{macrocode}
\pgfqkeys{/NGE/task/points}{
  .default=0,
  .code=\setcounter{NGEtaskpoints}{#1}}
%    \end{macrocode}
% We also provide a quick way to turn off points counting temporarily
% for a particular task.
%    \begin{macrocode}
\pgfkeys{/NGE/task/nopoints/.code=\setcounter{NGEtaskpoints}{0}}
%    \end{macrocode}
% In the same way we treat the task name.
%    \begin{macrocode}
\newcommand{\NGEtaskname}{}
\pgfqkeys{/NGE/task/name}{.default=Question,.store in=\NGE@taskname}
%    \end{macrocode}
% First we specify default settings for the task header.
%    \begin{macrocode}
\newcommand{\NGEtaskheader}{{\NGEtaskheaderfont\NGE@taskname{}
    \theNGEtask} ({\NGEtaskpointsfont\theNGEtaskpoints}): }
\newcommand{\NGEtaskheaderfont}{\bfseries}
\newcommand{\NGEtaskpointsfont}{\itshape}
%    \end{macrocode}
% \begin{macro}{NGEtask}
% Now we can define the environment itself.
%    \begin{macrocode}
\newenvironment{NGEtask}[1][]{%
  \refstepcounter{NGEtask}%
  \pgfqkeys{/NGE/task}{points,name}% Set defaults first,
  \pgfqkeys{/NGE/task}{#1}% Then process local options.
  \addtocounter{NGEpointstotal}{\value{NGEtaskpoints}}%
  \begin{trivlist}\item[\NGEtaskheader]\NGEtaskfont}{\end{trivlist}}
\newcommand{\NGEtaskfont}{}
\ifthenelse{\boolean{NGEAnswersMode}\or\boolean{NGEMarkingGuideMode}}{%
  \renewcommand{\NGEtaskfont}{\itshape}}%
{\renewcommand{\NGEtaskfont}{\normalfont}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{NGEtasks}
%   The command |\NGEtasks| sets default values for task options.
%    \begin{macrocode}
\newcommand{\NGEtasks}[1][]{\pgfqkeys{/NGE/tasks}{#1}}
\pgfkeys{/NGE/tasks/.unknown/.code=%
  \pgfkeys{/NGE/task/\pgfkeyscurrentname/.default=#1}}
%    \end{macrocode}
% \end{macro}
% 
% \subsection{Answers and solutions}
% \label{sec:code-ngetest-answers}
%
%
% \begin{macro}{answer}
% In test mode everything enclosed between |\begin{answer}| and
% |\end{answer}| is skipped by \LaTeX.  In answers mode the actual job
% of |answer| is done by environment |NGEanswer|.
%    \begin{macrocode}
\newenvironment{answer}{\begin{NGEanswer}}{\end{NGEanswer}}
\ifthenelse{\boolean{NGEAnswersMode}}{}{\excludeversion{answer}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{NGEanswer} 
% At the moment |NGEanswer| is very simple, but I still have defined
% several components for the simplicity of customization.
%    \begin{macrocode}
\newcommand{\NGEanswermark}{\textbf{\NGEanswername}: }
\newcommand{\NGEanswername}{Answer}
\newenvironment{NGEanswer}{\NGEanswermark}{\par}
%    \end{macrocode}
% \end{macro}
% In the same way one can define environments |solution| and |NGEsolution|.
% \begin{macro}{solution}
%
%    \begin{macrocode}
\newenvironment{solution}{\begin{NGEsolution}}{\end{NGEsolution}}
\ifthenelse{\boolean{NGEAnswersMode}}{}{\excludeversion{solution}}
%    \end{macrocode}   
% \end{macro}
% \begin{macro}{NGEsolution}
%
%    \begin{macrocode}
\newenvironment{NGEsolution}{\NGEsolutionmark}{\par}
\newcommand{\NGEsolutionmark}{\textit{\NGEsolutionname:} }
\newcommand{\NGEsolutionname}{Solution}
%    \end{macrocode}    
% \end{macro}
% In addition we enable instructor comments in answer mode, which are
% excluded by default.
% \begin{macro}{NGEcomment}
%    \begin{macrocode}
\newenvironment{NGEcomment}{\begingroup\NGEcommentfont}{\par\endgroup}
\newcommand{\NGEcommentfont}{\slshape}
%    \end{macrocode}
% \end{macro}
% 
%    \begin{macrocode}
\ifthenelse{\boolean{NGEAnswersMode}}{%
  \includeversion{comment}
  \renewenvironment{comment}{\begin{NGEcomment}}{\end{NGEcomment}}}{}
%    \end{macrocode}
% 
%
% \subsection{Marking guide}
% \label{sec:code-ngetest-marking-guide}
%
% In the same way we define commands and environments for the marking
% guide mode.
%    \begin{macrocode}
\newenvironment{NGEmarkingcomment}{\begingroup\NGEmarkingcommentfont}{\par\endgroup}
\newcommand{\NGEmarkingcommentfont}{\sffamily}
\newenvironment{markingcomment}{\begin{NGEmarkingcomment}}{\end{NGEmarkingcomment}}
\ifthenelse{\boolean{NGEMarkingGuideMode}}{}{\excludeversion{markingcomment}}
%    \end{macrocode}
% 
%    \begin{macrocode}
%\newenvironment{rubrics}{\begin{NGErubrics}}{\end{NGErubrics}}
%\newcounter{NGEtmp}
%\newenvironment{NGErubrics}{%
%  \pgfqkeys{/NGE/rubrics/.cd}{#1}\begin{description}}{\end{description}}
%\newcommand{\rubric}[1]{\setcounter{NGEtmp}{#1}\item[#1]}
%\ifthenelse{\boolean{NGEMarkingGuideMode}}{}{\excludeversion{rubrics}}
%    \end{macrocode}
%
%\iffalse
%</hide>
%</ngetest>
%\fi
% 
% \todo[inline]{Add to index references to \latexpackage{pgfkeys} tree used}
% \todo[inline]{Look up indexing commands for \latexpackage{doc}}
%^^A \todo[inline]{}
%^^A \todo[inline]{}
%^^A \todo[inline]{}
%^^A \todo[inline]{}
%^^A \todo[inline]{}
% \Finale
% \iffalse
%<*test>
%<default>\documentclass[12pt]{ngetest}
%<underscore>\documentclass[12pt,modesep=_]{ngetest}
%<comma>\documentclass[12pt,modesep=comma]{ngetest}
%<space>\documentclass[12pt,modesep=space]{ngetest}
\makeatletter
\begin{document}
%<*hide>
This is a test file for class \texttt{ngetest}.  First we test default
settings and main environments \texttt{NGEtest}, \texttt{solution},
\texttt{answer}, \texttt{comment}, and \texttt{markingcomment}.
%</hide>
Current mode is \pgfkeysvalueof{/NGE/test/options/mode}
and the suffix is
\@ifundefined{NGE@suffix}{undefined}{%
  \ifthenelse{\equal{\NGE@suffix}{}}{empty}{\NGE@suffix}}.

%<*hide>
\begin{NGEtask}
  This is the first task with default settings.
\end{NGEtask}
\begin{markingcomment}
  In marking guide mode solutions and answers are interspersed with
  marking notes, which do not show in answers mode, or in test mode.
\end{markingcomment}
\begin{answer}
  The answer must not show up in the task mode.
\end{answer}
\begin{comment}
  Here is a comment to the answer.  It must not show up in the test
  mode either, but it will show in other modes.
\end{comment}
\begin{NGEtask}[points=10]
  This is the second task.  Ten points are assigned to it.
\end{NGEtask}
\begin{NGEtask}[points=50,name=Problem]
  This task is a problem, it is 50 points worth.
\end{NGEtask}
\begin{solution}
  Problems have both solution and
\end{solution}
\begin{answer}
  answers
\end{answer} Now we change the default name to ``Query'' and give each
task 5 points by default.
\NGEtasks[name=Query,points=5]
\begin{NGEtask}
  This is the task with the new default settings.
\end{NGEtask}
\begin{NGEtask}[points=15]
  This task is worth 15 points.
\end{NGEtask}
\begin{NGEtask}[name=Practical task]
  This task has modified name and default number of points.
\end{NGEtask}
%</hide>
\end{document}
%</test>
% \fi
%^^A Local Variables:
%^^A TeX-master: t
%^^A End:
